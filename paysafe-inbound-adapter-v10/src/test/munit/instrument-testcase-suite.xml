<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  	xmlns:mock="http://www.mulesoft.org/schema/mule/mock" 
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	xmlns="http://www.mulesoft.org/schema/mule/core" 
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
    <munit:config name="munit" mock-connectors="false" mock-inbounds="false" doc:name="MUnit configuration"/>
    <spring:beans>
        <spring:import resource="classpath:api.xml"/>
        <spring:import resource="classpath:clienttoken.xml"/>
        <spring:import resource="classpath:config.xml"/>
        <spring:import resource="classpath:deposits.xml"/>
        <spring:import resource="classpath:threedsecure.xml"/>
        <spring:import resource="classpath:instrument.xml"/>
        <spring:import resource="classpath:checkstatus.xml"/>
        <spring:import resource="classpath:error-handler.xml"/>
        <spring:import resource="classpath:withdrawals.xml"/>

    </spring:beans>
    <munit:test name="InstrumentFlow-TestCase-1(SuccessScenarioforCreate)" description="Verifying Instrument-Create flow with test request for success scenario." >
        <mock:when messageProcessor=".*:.*" doc:name="Mock Pre Authorization API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Pre Authorization API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;links&quot;:[{&quot;rel&quot;:&quot;self&quot;,&quot;href&quot;:&quot;https://api.test.paysafe.com/cardpayments/v1/accounts/1001219270/auths/6e1524a1-517e-4353-8653-6b36742f377c&quot;}],&quot;id&quot;:&quot;6e1524a1-517e-4353-8653-6b36742f377c&quot;,&quot;merchantRefNum&quot;:&quot;marchant-22222111220180615132340&quot;,&quot;txnTime&quot;:&quot;2018-06-15T13:23:41Z&quot;,&quot;status&quot;:&quot;COMPLETED&quot;,&quot;amount&quot;:1,&quot;settleWithAuth&quot;:false,&quot;preAuth&quot;:false,&quot;availableToSettle&quot;:1,&quot;card&quot;:{&quot;type&quot;:&quot;VI&quot;,&quot;lastDigits&quot;:&quot;2345&quot;,&quot;cardExpiry&quot;:{&quot;month&quot;:1,&quot;year&quot;:2026}},&quot;authCode&quot;:&quot;100615&quot;,&quot;profile&quot;:{&quot;firstName&quot;:&quot;John&quot;,&quot;lastName&quot;:&quot;Smith&quot;,&quot;email&quot;:&quot;john.smith@test.com&quot;},&quot;billingDetails&quot;:{&quot;street&quot;:&quot;1 Some St&quot;,&quot;city&quot;:&quot;Somewhere&quot;,&quot;country&quot;:&quot;AU&quot;,&quot;zip&quot;:&quot;1234&quot;,&quot;phone&quot;:&quot;123456789&quot;},&quot;customerIp&quot;:&quot;12.12.12.12&quot;,&quot;merchantDescriptor&quot;:{&quot;dynamicDescriptor&quot;:&quot;DD Line 1&quot;,&quot;phone&quot;:&quot;000-111000099&quot;},&quot;visaAdditionalAuthData&quot;:{},&quot;description&quot;:&quot;Pre-Auth Checked&quot;,&quot;currencyCode&quot;:&quot;EUR&quot;,&quot;avsResponse&quot;:&quot;MATCH&quot;,&quot;cvvVerification&quot;:&quot;MATCH&quot;}']"/>
        </mock:when>
        <mock:when messageProcessor=".*:.*" doc:name="Mock Create Profile API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Create Profile API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;id&quot;:&quot;c567eb80-7d0b-4813-9b46-1819811e30ff&quot;,&quot;status&quot;:&quot;ACTIVE&quot;,&quot;merchantCustomerId&quot;:&quot;marchant-222221&quot;,&quot;locale&quot;:&quot;en_GB&quot;,&quot;firstName&quot;:&quot;John&quot;,&quot;middleName&quot;:&quot;&quot;,&quot;lastName&quot;:&quot;Smith&quot;,&quot;dateOfBirth&quot;:{&quot;year&quot;:1980,&quot;month&quot;:1,&quot;day&quot;:1},&quot;ip&quot;:&quot;12.12.12.12&quot;,&quot;paymentToken&quot;:&quot;PeHh4RaQNcHCEgm&quot;,&quot;phone&quot;:&quot;123456789&quot;,&quot;cellPhone&quot;:&quot;123456789&quot;,&quot;email&quot;:&quot;john.smith@test.com&quot;}']"/>
        </mock:when>
        <mock:when messageProcessor=".*:.*" doc:name="Mock Create Address API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Create Address API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;id&quot;:&quot;9bd1dcdd-2b35-47b2-9109-8c2533c7b19b&quot;,&quot;street&quot;:&quot;1 Some St&quot;,&quot;city&quot;:&quot;Somewhere&quot;,&quot;country&quot;:&quot;AU&quot;,&quot;state&quot;:&quot;ON&quot;,&quot;zip&quot;:&quot;1234&quot;,&quot;phone&quot;:&quot;123456789&quot;,&quot;defaultShippingAddressIndicator&quot;:false,&quot;status&quot;:&quot;ACTIVE&quot;}']"/>
        </mock:when>
        <mock:when messageProcessor=".*:.*" doc:name="Mock Create Card API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Create Card API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;status&quot;:&quot;ACTIVE&quot;,&quot;id&quot;:&quot;a4499b48-3b03-4948-a953-94e4fae7b91e&quot;,&quot;cardBin&quot;:&quot;450644&quot;,&quot;lastDigits&quot;:&quot;0017&quot;,&quot;cardExpiry&quot;:{&quot;year&quot;:2026,&quot;month&quot;:1},&quot;cardType&quot;:&quot;VI&quot;,&quot;paymentToken&quot;:&quot;CEKkJGFMeyV1WjX&quot;,&quot;storedCredentialTokenStatus&quot;:&quot;UNVERIFIED&quot;,&quot;defaultCardIndicator&quot;:true}']"/>
        </mock:when>
        <munit:set payload="#['{&quot;Instrument&quot;:{&quot;InstrumentId&quot;:&quot;marchant-222221&quot;,&quot;type&quot;:&quot;Card account&quot;,&quot;SubType&quot;:&quot;Visa&quot;,&quot;GatewayNonce&quot;:&quot;SC6781nzL2pG1PfQ&quot;,&quot;GatewayToken&quot;:&quot;&quot;,&quot;LegalEntity&quot;:&quot;Axicorp Limited&quot;,&quot;Currency&quot;:&quot;GBP&quot;,&quot;HolderName&quot;:&quot;NJogn T Smith&quot;,&quot;Identifier&quot;:&quot;1234&quot;,&quot;ExpiryDate&quot;:&quot;2020-02-29&quot;,&quot;TagName&quot;:&quot;MyHSBCCard&quot;,&quot;AdditionalInfo&quot;:{}},&quot;Client&quot;:{&quot;ClientId&quot;:&quot;marchant-222221&quot;,&quot;ProfileId&quot;:&quot;&quot;,&quot;FirstName&quot;:&quot;John&quot;,&quot;MiddleName&quot;:&quot;&quot;,&quot;LastName&quot;:&quot;Smith&quot;,&quot;DOB&quot;:&quot;1980-01-01&quot;,&quot;Email&quot;:&quot;john.smith@test.com&quot;,&quot;Phone&quot;:&quot;123456789&quot;,&quot;Mobile&quot;:&quot;123456789&quot;,&quot;Address&quot;:&quot;1 Some St&quot;,&quot;City&quot;:&quot;Somewhere&quot;,&quot;State&quot;:&quot;ON&quot;,&quot;PostCode&quot;:&quot;1234&quot;,&quot;CountryA2&quot;:&quot;AU&quot;,&quot;CountryA3&quot;:&quot;AUS&quot;,&quot;ClientIP&quot;:&quot;12.12.12.12&quot;,&quot;AdditionalInfo&quot;:{&quot;Locale&quot;:&quot;en_GB&quot;}},&quot;AdditionalInfo&quot;:{}}']" mimeType="application/json" doc:name="Set Request Payload"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger level="INFO" doc:name="Request Payload" category="MUnit Test || InstrumentFlow-TestCase-1(SuccessScenarioforCreate)" message="#['Request Payload \n GatewayNonce : '+payload.Instrument.GatewayNonce+'\n GatewayToken : '+payload.Instrument.GatewayToken+'\n LegalEntity : '+payload.Instrument.LegalEntity+'\n Currency : '+payload.Instrument.Currency+'\n ExpiryDate : '+payload.Instrument.ExpiryDate+'\n ProfileId : '+payload.Client.ProfileId+'\n ClientId : '+payload.Client.ClientId+'\n CountryA2 : '+payload.Client.CountryA2+'\n PostCode : '+payload.Client.PostCode+'\n FirstName : '+payload.Client.FirstName+'\n LastName : '+payload.Client.LastName+'\n Email : '+payload.Client.Email+'\n Address : '+payload.Client.Address+'\n Locale : '+payload.Client.AdditionalInfo.Locale+'\n']"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <flow-ref name="instrumentFlow" doc:name="Flow-ref to instrument Flow"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger level="INFO" doc:name="Response Payload" category="MUnit Test || InstrumentFlow-TestCase-1(SuccessScenarioforCreate)" message="#['Response Payload \n InstrumentId : '+payload.Instrument.InstrumentId+'\n GatewayToken : '+payload.Instrument.GatewayToken+'\n ProfileId : '+payload.Instrument.ProfileId+' \n Gateway Response Message : '+payload.Instrument.GatewayResponseMessage+' \n Gateway Response Code : '+payload.Instrument.GatewayResponseCode+'\n type : '+payload.Instrument.type+'\n SubType : '+payload.Instrument.SubType+'\n IsDebit : '+payload.Instrument.IsDebit+'\n HolderName : '+payload.Instrument.HolderName+'\n Identifier : '+payload.Instrument.Identifier+'\n ExpiryDate : '+payload.Instrument.ExpiryDate+'\n IssuedCountry : '+payload.Instrument.IssuedCountry+'\n ClientId : '+payload.Client.ClientId+'\n']"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <munit:assert-on-equals expectedValue="#['{&quot;Instrument&quot;:{&quot;InstrumentId&quot;:&quot;marchant-222221&quot;,&quot;ProfileId&quot;:&quot;c567eb80-7d0b-4813-9b46-1819811e30ff&quot;,&quot;GatewayToken&quot;:&quot;CEKkJGFMeyV1WjX&quot;,&quot;GatewayResponseCode&quot;:&quot;&quot;,&quot;GatewayResponseMessage&quot;:&quot;&quot;,&quot;GatewayStatus&quot;:&quot;SUCCESS&quot;,&quot;type&quot;:&quot;Card account&quot;,&quot;SubType&quot;:&quot;Visa&quot;,&quot;IsDebit&quot;:&quot;false&quot;,&quot;HolderName&quot;:&quot;NJogn T Smith&quot;,&quot;Identifier&quot;:&quot;0017&quot;,&quot;ExpiryDate&quot;:&quot;2026-1-31&quot;,&quot;IssuedCountry&quot;:&quot;&quot;,&quot;AdditionalInfo&quot;:{&quot;AVS&quot;:&quot;MATCH&quot;,&quot;CVV&quot;:&quot;MATCH&quot;}},&quot;Client&quot;:{&quot;ClientId&quot;:&quot;marchant-222221&quot;,&quot;AdditionalInfo&quot;:{}}}']" actualValue="#[payload]" doc:name="Check Response Payload" message="Response message is not valid as expected"/>
    </munit:test>
    <munit:test name="InstrumentFlow-TestCase2(SuccessScenarioforCreateCardonly)" description="Verifying Instrument-CreateCardonly flow with test request for success scenario" >
        <mock:when messageProcessor=".*:.*" doc:name="Mock Create Card API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Create Card API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;status&quot;:&quot;ACTIVE&quot;,&quot;id&quot;:&quot;c5fc58eb-6935-4ac1-93b0-cd5ea2ac5572&quot;,&quot;cardBin&quot;:&quot;453091&quot;,&quot;lastDigits&quot;:&quot;2345&quot;,&quot;cardExpiry&quot;:{&quot;year&quot;:2026,&quot;month&quot;:1},&quot;cardType&quot;:&quot;VI&quot;,&quot;paymentToken&quot;:&quot;C7l55oErIu2iFFs&quot;,&quot;storedCredentialTokenStatus&quot;:&quot;UNVERIFIED&quot;}']"/>
        </mock:when>
        <munit:set payload="#['{&quot;Instrument&quot;:{&quot;InstrumentId&quot;:&quot;marchant-222221&quot;,&quot;type&quot;:&quot;Card account&quot;,&quot;SubType&quot;:&quot;Visa&quot;,&quot;GatewayNonce&quot;:&quot;SCmky0ZBiOKbc9k5&quot;,&quot;GatewayToken&quot;:&quot;&quot;,&quot;LegalEntity&quot;:&quot;Axicorp Limited&quot;,&quot;Currency&quot;:&quot;GBP&quot;,&quot;HolderName&quot;:&quot;NJogn T Smith&quot;,&quot;Identifier&quot;:&quot;1234&quot;,&quot;ExpiryDate&quot;:&quot;2020-02-29&quot;,&quot;TagName&quot;:&quot;MyHSBCCard&quot;,&quot;AdditionalInfo&quot;:{}},&quot;Client&quot;:{&quot;ClientId&quot;:&quot;12345&quot;,&quot;ProfileId&quot;:&quot;7beb723d-ae9d-407f-ace7-ab0bfca38e22&quot;,&quot;FirstName&quot;:&quot;John&quot;,&quot;MiddleName&quot;:&quot;&quot;,&quot;LastName&quot;:&quot;Smith&quot;,&quot;DOB&quot;:&quot;1980-01-01&quot;,&quot;Email&quot;:&quot;john.smith@test.com&quot;,&quot;Phone&quot;:&quot;123456789&quot;,&quot;Mobile&quot;:&quot;123456789&quot;,&quot;Address&quot;:&quot;1 Some St&quot;,&quot;City&quot;:&quot;Somewhere&quot;,&quot;State&quot;:&quot;&quot;,&quot;PostCode&quot;:&quot;1234&quot;,&quot;CountryA2&quot;:&quot;AU&quot;,&quot;CountryA3&quot;:&quot;AUS&quot;,&quot;ClientIP&quot;:&quot;12.12.12.12&quot;,&quot;AdditionalInfo&quot;:{&quot;Locale&quot;:&quot;en_GB&quot;}},&quot;AdditionalInfo&quot;:{}}']" doc:name="Set Request Payload"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Request Payload \n GatewayNonce : '+payload.Instrument.GatewayNonce+'\n GatewayToken : '+payload.Instrument.GatewayToken+'\n LegalEntity : '+payload.Instrument.LegalEntity+'\n Currency : '+payload.Instrument.Currency+'\n ExpiryDate : '+payload.Instrument.ExpiryDate+'\n ProfileId : '+payload.Client.ProfileId+'\n ClientId : '+payload.Client.ClientId+'\n CountryA2 : '+payload.Client.CountryA2+'\n PostCode : '+payload.Client.PostCode+'\n FirstName : '+payload.Client.FirstName+'\n LastName : '+payload.Client.LastName+'\n Email : '+payload.Client.Email+'\n Address : '+payload.Client.Address+'\n Locale : '+payload.Client.AdditionalInfo.Locale+'\n']" level="INFO" category="MUnit Test || instrumentFlow-TestCase2(SuccessScenarioforCreateCardonly)" doc:name="Request Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <flow-ref name="instrumentFlow" doc:name="Flow-ref to instrument Flow"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Response Payload \n InstrumentId : '+payload.Instrument.InstrumentId+'\n GatewayToken : '+payload.Instrument.GatewayToken+'\n ProfileId : '+payload.Instrument.ProfileId+' \n Gateway Response Message : '+payload.Instrument.GatewayResponseMessage+' \n Gateway Response Code : '+payload.Instrument.GatewayResponseCode+'\n type : '+payload.Instrument.type+'\n SubType : '+payload.Instrument.SubType+'\n IsDebit : '+payload.Instrument.IsDebit+'\n HolderName : '+payload.Instrument.HolderName+'\n Identifier : '+payload.Instrument.Identifier+'\n ExpiryDate : '+payload.Instrument.ExpiryDate+'\n IssuedCountry : '+payload.Instrument.IssuedCountry+'\n ClientId : '+payload.Client.ClientId+'\n']" level="INFO" category="MUnit Test || instrumentFlow-TestCase2(SuccessScenarioforCreateCardonly)" doc:name="Response Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <munit:assert-on-equals message="Response message is not valid as expected" expectedValue="#['{&quot;Instrument&quot;:{&quot;InstrumentId&quot;:&quot;marchant-222221&quot;,&quot;ProfileId&quot;:&quot;7beb723d-ae9d-407f-ace7-ab0bfca38e22&quot;,&quot;GatewayToken&quot;:&quot;C7l55oErIu2iFFs&quot;,&quot;GatewayResponseCode&quot;:&quot;&quot;,&quot;GatewayResponseMessage&quot;:&quot;&quot;,&quot;GatewayStatus&quot;:&quot;SUCCESS&quot;,&quot;type&quot;:&quot;Card account&quot;,&quot;SubType&quot;:&quot;Visa&quot;,&quot;IsDebit&quot;:&quot;false&quot;,&quot;HolderName&quot;:&quot;NJogn T Smith&quot;,&quot;Identifier&quot;:&quot;2345&quot;,&quot;ExpiryDate&quot;:&quot;2026-1-31&quot;,&quot;IssuedCountry&quot;:&quot;&quot;,&quot;AdditionalInfo&quot;:{}},&quot;Client&quot;:{&quot;ClientId&quot;:&quot;12345&quot;,&quot;AdditionalInfo&quot;:{}}}']" actualValue="#[payload]" doc:name="Check Response Payload"/>
    </munit:test>


     
    <munit:test name="InstrumentFlow-TestCase-3(FailureScenarioforPreAuth)" description="PreAuth API gives Error Response because of incorrect gateway Nounce">
        <munit:set payload="#['{&quot;Instrument&quot;:{&quot;InstrumentId&quot;:&quot;marchant-222221&quot;,&quot;type&quot;:&quot;Card account&quot;,&quot;SubType&quot;:&quot;Visa&quot;,&quot;GatewayNonce&quot;:&quot;SJ6781nzL2pG1PfQ&quot;,&quot;GatewayToken&quot;:&quot;&quot;,&quot;LegalEntity&quot;:&quot;Axicorp Limited&quot;,&quot;Currency&quot;:&quot;GBP&quot;,&quot;HolderName&quot;:&quot;NJogn T Smith&quot;,&quot;Identifier&quot;:&quot;1234&quot;,&quot;ExpiryDate&quot;:&quot;2020-02-29&quot;,&quot;TagName&quot;:&quot;MyHSBCCard&quot;,&quot;AdditionalInfo&quot;:{}},&quot;Client&quot;:{&quot;ClientId&quot;:&quot;marchant-222221&quot;,&quot;ProfileId&quot;:&quot;&quot;,&quot;FirstName&quot;:&quot;John&quot;,&quot;MiddleName&quot;:&quot;&quot;,&quot;LastName&quot;:&quot;Smith&quot;,&quot;DOB&quot;:&quot;1980-01-01&quot;,&quot;Email&quot;:&quot;john.smith@test.com&quot;,&quot;Phone&quot;:&quot;123456789&quot;,&quot;Mobile&quot;:&quot;123456789&quot;,&quot;Address&quot;:&quot;1 Some St&quot;,&quot;City&quot;:&quot;Somewhere&quot;,&quot;State&quot;:&quot;ON&quot;,&quot;PostCode&quot;:&quot;1234&quot;,&quot;CountryA2&quot;:&quot;AU&quot;,&quot;CountryA3&quot;:&quot;AUS&quot;,&quot;ClientIP&quot;:&quot;12.12.12.12&quot;,&quot;AdditionalInfo&quot;:{&quot;Locale&quot;:&quot;en_GB&quot;}},&quot;AdditionalInfo&quot;:{}}']" mimeType="application/json" doc:name="Set Request Payload"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Request Payload \n GatewayNonce : '+payload.Instrument.GatewayNonce+'\n GatewayToken : '+payload.Instrument.GatewayToken+'\n LegalEntity : '+payload.Instrument.LegalEntity+'\n Currency : '+payload.Instrument.Currency+'\n ExpiryDate : '+payload.Instrument.ExpiryDate+'\n ProfileId : '+payload.Client.ProfileId+'\n ClientId : '+payload.Client.ClientId+'\n CountryA2 : '+payload.Client.CountryA2+'\n PostCode : '+payload.Client.PostCode+'\n FirstName : '+payload.Client.FirstName+'\n LastName : '+payload.Client.LastName+'\n Email : '+payload.Client.Email+'\n Address : '+payload.Client.Address+'\n Locale : '+payload.Client.AdditionalInfo.Locale+'\n']" level="INFO" category="MUnit Test || InstrumentFlow-TestCase-3(FailureScenarioforPreAuth)" doc:name="Request Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <flow-ref name="instrumentFlow" doc:name="Flow-ref to instrument Flow"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Response Payload \n InstrumentId : '+payload.Instrument.InstrumentId+'\n GatewayToken : '+payload.Instrument.GatewayToken+'\n ProfileId : '+payload.Instrument.ProfileId+' \n Gateway Response Message : '+payload.Instrument.GatewayResponseMessage+' \n Gateway Response Code : '+payload.Instrument.GatewayResponseCode+'\n type : '+payload.Instrument.type+'\n SubType : '+payload.Instrument.SubType+'\n IsDebit : '+payload.Instrument.IsDebit+'\n HolderName : '+payload.Instrument.HolderName+'\n Identifier : '+payload.Instrument.Identifier+'\n ExpiryDate : '+payload.Instrument.ExpiryDate+'\n IssuedCountry : '+payload.Instrument.IssuedCountry+'\n ClientId : '+payload.Client.ClientId+'\n']" level="INFO" category="MUnit Test || InstrumentFlow-TestCase-3(FailureScenarioforPreAuth)" doc:name="Response Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <munit:assert-on-equals message="Response message is not valid as expected" expectedValue="#['{&quot;Instrument&quot;:{&quot;InstrumentId&quot;:&quot;&quot;,&quot;ProfileId&quot;:&quot;&quot;,&quot;GatewayToken&quot;:&quot;&quot;,&quot;GatewayResponseCode&quot;:&quot;5500&quot;,&quot;GatewayResponseMessage&quot;:&quot;Either the payment token is invalid or the corresponding profile or credit card is not active.&quot;,&quot;GatewayStatus&quot;:&quot;FAILED&quot;,&quot;type&quot;:&quot;&quot;,&quot;SubType&quot;:&quot;&quot;,&quot;IsDebit&quot;:&quot;&quot;,&quot;HolderName&quot;:&quot;&quot;,&quot;Identifier&quot;:&quot;&quot;,&quot;ExpiryDate&quot;:&quot;&quot;,&quot;IssuedCountry&quot;:&quot;&quot;,&quot;AdditionalInfo&quot;:{&quot;AVS&quot;:&quot;&quot;,&quot;CVV&quot;:&quot;&quot;}},&quot;Client&quot;:{&quot;ClientId&quot;:&quot;marchant-222221&quot;,&quot;AdditionalInfo&quot;:{}}}']" actualValue="#[payload]" doc:name="Assert Error Response"/>
    </munit:test>
 <munit:test name="InstrumentFlow-TestCase-4(FailureScenarioforCreateProfile)" description="Verifying Instrument-Create flow with test request for success scenario." >
        <mock:when messageProcessor=".*:.*" doc:name="Mock Pre Authorization API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Pre Authorization API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;links&quot;:[{&quot;rel&quot;:&quot;self&quot;,&quot;href&quot;:&quot;https://api.test.paysafe.com/cardpayments/v1/accounts/1001219270/auths/6e1524a1-517e-4353-8653-6b36742f377c&quot;}],&quot;id&quot;:&quot;6e1524a1-517e-4353-8653-6b36742f377c&quot;,&quot;merchantRefNum&quot;:&quot;marchant-22222111220180615132340&quot;,&quot;txnTime&quot;:&quot;2018-06-15T13:23:41Z&quot;,&quot;status&quot;:&quot;COMPLETED&quot;,&quot;amount&quot;:1,&quot;settleWithAuth&quot;:false,&quot;preAuth&quot;:false,&quot;availableToSettle&quot;:1,&quot;card&quot;:{&quot;type&quot;:&quot;VI&quot;,&quot;lastDigits&quot;:&quot;2345&quot;,&quot;cardExpiry&quot;:{&quot;month&quot;:1,&quot;year&quot;:2026}},&quot;authCode&quot;:&quot;100615&quot;,&quot;profile&quot;:{&quot;firstName&quot;:&quot;John&quot;,&quot;lastName&quot;:&quot;Smith&quot;,&quot;email&quot;:&quot;john.smith@test.com&quot;},&quot;billingDetails&quot;:{&quot;street&quot;:&quot;1 Some St&quot;,&quot;city&quot;:&quot;Somewhere&quot;,&quot;country&quot;:&quot;AU&quot;,&quot;zip&quot;:&quot;1234&quot;,&quot;phone&quot;:&quot;123456789&quot;},&quot;customerIp&quot;:&quot;12.12.12.12&quot;,&quot;merchantDescriptor&quot;:{&quot;dynamicDescriptor&quot;:&quot;DD Line 1&quot;,&quot;phone&quot;:&quot;000-111000099&quot;},&quot;visaAdditionalAuthData&quot;:{},&quot;description&quot;:&quot;Pre-Auth Checked&quot;,&quot;currencyCode&quot;:&quot;EUR&quot;,&quot;avsResponse&quot;:&quot;MATCH&quot;,&quot;cvvVerification&quot;:&quot;MATCH&quot;}']"/>
        </mock:when>
        <munit:set payload="#['{&quot;Instrument&quot;:{&quot;InstrumentId&quot;:&quot;marchant-222221&quot;,&quot;type&quot;:&quot;Card account&quot;,&quot;SubType&quot;:&quot;Visa&quot;,&quot;GatewayNonce&quot;:&quot;SC6781nzL2pG1PfQ&quot;,&quot;GatewayToken&quot;:&quot;&quot;,&quot;LegalEntity&quot;:&quot;Axicorp Limited&quot;,&quot;Currency&quot;:&quot;GBP&quot;,&quot;HolderName&quot;:&quot;NJogn T Smith&quot;,&quot;Identifier&quot;:&quot;1234&quot;,&quot;ExpiryDate&quot;:&quot;2020-02-29&quot;,&quot;TagName&quot;:&quot;MyHSBCCard&quot;,&quot;AdditionalInfo&quot;:{}},&quot;Client&quot;:{&quot;ClientId&quot;:&quot;marchant-222221&quot;,&quot;ProfileId&quot;:&quot;&quot;,&quot;FirstName&quot;:&quot;John&quot;,&quot;MiddleName&quot;:&quot;&quot;,&quot;LastName&quot;:&quot;Smith&quot;,&quot;DOB&quot;:&quot;1980-01-01&quot;,&quot;Email&quot;:&quot;john.smith@test.com&quot;,&quot;Phone&quot;:&quot;123456789&quot;,&quot;Mobile&quot;:&quot;123456789&quot;,&quot;Address&quot;:&quot;1 Some St&quot;,&quot;City&quot;:&quot;Somewhere&quot;,&quot;State&quot;:&quot;ON&quot;,&quot;PostCode&quot;:&quot;1234&quot;,&quot;CountryA2&quot;:&quot;AU&quot;,&quot;CountryA3&quot;:&quot;AUS&quot;,&quot;ClientIP&quot;:&quot;12.12.12.12&quot;,&quot;AdditionalInfo&quot;:{&quot;Locale&quot;:&quot;en_&quot;}},&quot;AdditionalInfo&quot;:{}}']" mimeType="application/json" doc:name="Set Request Payload"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger level="INFO" doc:name="Request Payload" category="MUnit Test || InstrumentFlow-TestCase-4(FailureScenarioforCreateProfile)" message="#['Request Payload \n GatewayNonce : '+payload.Instrument.GatewayNonce+'\n GatewayToken : '+payload.Instrument.GatewayToken+'\n LegalEntity : '+payload.Instrument.LegalEntity+'\n Currency : '+payload.Instrument.Currency+'\n ExpiryDate : '+payload.Instrument.ExpiryDate+'\n ProfileId : '+payload.Client.ProfileId+'\n ClientId : '+payload.Client.ClientId+'\n CountryA2 : '+payload.Client.CountryA2+'\n PostCode : '+payload.Client.PostCode+'\n FirstName : '+payload.Client.FirstName+'\n LastName : '+payload.Client.LastName+'\n Email : '+payload.Client.Email+'\n Address : '+payload.Client.Address+'\n Locale : '+payload.Client.AdditionalInfo.Locale+'\n']"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <flow-ref name="instrumentFlow" doc:name="Flow-ref to instrument Flow"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger level="INFO" doc:name="Response Payload" category="MUnit Test || InstrumentFlow-TestCase-4(FailureScenarioforCreateProfile)" message="#['Response Payload \n InstrumentId : '+payload.Instrument.InstrumentId+'\n GatewayToken : '+payload.Instrument.GatewayToken+'\n ProfileId : '+payload.Instrument.ProfileId+' \n Gateway Response Message : '+payload.Instrument.GatewayResponseMessage+' \n Gateway Response Code : '+payload.Instrument.GatewayResponseCode+'\n type : '+payload.Instrument.type+'\n SubType : '+payload.Instrument.SubType+'\n IsDebit : '+payload.Instrument.IsDebit+'\n HolderName : '+payload.Instrument.HolderName+'\n Identifier : '+payload.Instrument.Identifier+'\n ExpiryDate : '+payload.Instrument.ExpiryDate+'\n IssuedCountry : '+payload.Instrument.IssuedCountry+'\n ClientId : '+payload.Client.ClientId+'\n']"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <munit:assert-on-equals expectedValue="#['{&quot;Instrument&quot;:{&quot;InstrumentId&quot;:&quot;&quot;,&quot;ProfileId&quot;:&quot;&quot;,&quot;GatewayToken&quot;:&quot;&quot;,&quot;GatewayResponseCode&quot;:&quot;5068&quot;,&quot;GatewayResponseMessage&quot;:&quot;Either you submitted a request that is missing a mandatory field or the value of a field does not match the format expected.&quot;,&quot;GatewayStatus&quot;:&quot;FAILED&quot;,&quot;type&quot;:&quot;&quot;,&quot;SubType&quot;:&quot;&quot;,&quot;IsDebit&quot;:&quot;&quot;,&quot;HolderName&quot;:&quot;&quot;,&quot;Identifier&quot;:&quot;&quot;,&quot;ExpiryDate&quot;:&quot;&quot;,&quot;IssuedCountry&quot;:&quot;&quot;,&quot;AdditionalInfo&quot;:{&quot;AVS&quot;:&quot;&quot;,&quot;CVV&quot;:&quot;&quot;}},&quot;Client&quot;:{&quot;ClientId&quot;:&quot;marchant-222221&quot;,&quot;AdditionalInfo&quot;:{}}}']" actualValue="#[payload]" doc:name="Check Response Payload" message="Response message is not valid as expected"/>
    </munit:test>
    <munit:test name="CreateCardSubFlow-TestCase5(SuccessScenario)" description="Verifying Instrument-Create flow with test request for success scenario." >
        <mock:when messageProcessor=".*:.*" doc:name="Mock Create Card API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Create Card API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;status&quot;:&quot;ACTIVE&quot;,&quot;id&quot;:&quot;a4499b48-3b03-4948-a953-94e4fae7b91e&quot;,&quot;cardBin&quot;:&quot;450644&quot;,&quot;lastDigits&quot;:&quot;0017&quot;,&quot;cardExpiry&quot;:{&quot;year&quot;:2026,&quot;month&quot;:1},&quot;cardType&quot;:&quot;VI&quot;,&quot;paymentToken&quot;:&quot;CEKkJGFMeyV1WjX&quot;,&quot;storedCredentialTokenStatus&quot;:&quot;UNVERIFIED&quot;,&quot;defaultCardIndicator&quot;:true}']"/>
        </mock:when>
        <munit:set payload="#['{&quot;singleUseToken&quot;:&quot;SCSNm7omYngPr8XM&quot;}']" mimeType="application/json" doc:name="Set Request Payload"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Request Payload \n singleUseToken : '+payload.singleUseToken+'\n']" level="INFO" category="MUnit Test || CreateCardSubFlow-TestCase5(SuccessScenario)" doc:name="Request Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <flow-ref name="createCardSubFlow" doc:name="Flow-ref to createCardSubFlow"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Response Payload \n status : '+payload.status+'\n id : '+payload.status+' \n cardBin : '+payload.cardBin+' \n lastDigits : '+payload.lastDigits+' \n year : '+payload.cardExpiry.year+' \n month : '+payload.cardExpiry.month+' \n cardType : '+payload.cardType+' \n paymentToken : '+payload.paymentToken+' \n storedCredentialTokenStatus : '+payload.storedCredentialTokenStatus+'\n defaultCardIndicator : '+payload.defaultCardIndicator+'\n' ]" level="INFO" category="MUnit Test || CreateCardSubFlow-TestCase5(SuccessScenario)" doc:name="Response Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <munit:assert-on-equals expectedValue="#['{&quot;paymentToken&quot;:&quot;CEKkJGFMeyV1WjX&quot;,&quot;defaultCardIndicator&quot;:true,&quot;cardBin&quot;:&quot;450644&quot;,&quot;cardExpiry&quot;:{&quot;year&quot;:2026,&quot;month&quot;:1},&quot;storedCredentialTokenStatus&quot;:&quot;UNVERIFIED&quot;,&quot;cardType&quot;:&quot;VI&quot;,&quot;lastDigits&quot;:&quot;0017&quot;,&quot;id&quot;:&quot;a4499b48-3b03-4948-a953-94e4fae7b91e&quot;,&quot;status&quot;:&quot;ACTIVE&quot;}']" actualValue="#[payload]" doc:name="Check Response Payload" message="Response message is not valid as expected"/>
    </munit:test>
    <munit:test name="CreateAddressSubFlow-TestCase6(SuccessScenario)" description="Verifying Instrument-Create flow with test request for success scenario." >
        <mock:when messageProcessor=".*:.*" doc:name="Mock Create Address API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Create Address API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;id&quot;:&quot;5e1c1e5d-eab1-45f9-89ac-f875024b69ab&quot;,&quot;street&quot;:&quot;1 Some St&quot;,&quot;city&quot;:&quot;Somewhere&quot;,&quot;country&quot;:&quot;AU&quot;,&quot;state&quot;:&quot;ON&quot;,&quot;zip&quot;:&quot;1234&quot;,&quot;phone&quot;:&quot;123456789&quot;,&quot;defaultShippingAddressIndicator&quot;:false,&quot;status&quot;:&quot;ACTIVE&quot;}']"/>
        </mock:when>
        <munit:set payload="#['{&quot;street&quot;:&quot;1 Some St&quot;,&quot;city&quot;:&quot;Somewhere&quot;,&quot;zip&quot;:&quot;1234&quot;,&quot;country&quot;:&quot;AU&quot;,&quot;state&quot;:&quot;ON&quot;,&quot;phone&quot;:&quot;123456789&quot;}']" mimeType="application/json" doc:name="Set Request Payload"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Request Payload \n street : '+payload.street+'\n city : '+payload.city+' \n zip : '+payload.zip+' \n country : '+payload.country+' \n state : '+payload.state+' \n phone : '+payload.phone+'\n']" level="INFO" category="MUnit Test || CreateAddressSubFlow-TestCase6(SuccessScenario)" doc:name="Request Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <flow-ref name="createAddressSubFlow" doc:name="Flow-ref to createAddressSubFlow"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message=" #['Response Payload \n id : '+payload.id+'\n street : '+payload.street+' \n city : '+payload.city+' \n country : '+payload.country+' \n zip : '+payload.zip+'\n phone : '+payload.phone+'\n defaultShippingAddressIndicator : '+payload.defaultShippingAddressIndicator+'\n']" level="INFO" category="MUnit Test || CreateAddressSubFlow-TestCase6(SuccessScenario)" doc:name="Response Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <munit:assert-on-equals expectedValue="#['{&quot;zip&quot;:&quot;1234&quot;,&quot;country&quot;:&quot;AU&quot;,&quot;city&quot;:&quot;Somewhere&quot;,&quot;phone&quot;:&quot;123456789&quot;,&quot;street&quot;:&quot;1 Some St&quot;,&quot;id&quot;:&quot;5e1c1e5d-eab1-45f9-89ac-f875024b69ab&quot;,&quot;state&quot;:&quot;ON&quot;,&quot;defaultShippingAddressIndicator&quot;:false,&quot;status&quot;:&quot;ACTIVE&quot;}']" actualValue="#[payload]" doc:name="Check Response Payload" message="Response message is not valid as expected"/>
    </munit:test>
    <munit:test name="CreateProfileSubFlow-TestCase7(SuccessScenario)" description="Verifying Instrument-Create flow with test request for success scenario." >
        <mock:when messageProcessor=".*:.*" doc:name="Mock Create Profile API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Create Profile API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;id&quot;:&quot;c567eb80-7d0b-4813-9b46-1819811e30ff&quot;,&quot;status&quot;:&quot;ACTIVE&quot;,&quot;merchantCustomerId&quot;:&quot;marchant-222221&quot;,&quot;locale&quot;:&quot;en_GB&quot;,&quot;firstName&quot;:&quot;John&quot;,&quot;middleName&quot;:&quot;&quot;,&quot;lastName&quot;:&quot;Smith&quot;,&quot;dateOfBirth&quot;:{&quot;year&quot;:1980,&quot;month&quot;:1,&quot;day&quot;:1},&quot;ip&quot;:&quot;12.12.12.12&quot;,&quot;paymentToken&quot;:&quot;PeHh4RaQNcHCEgm&quot;,&quot;phone&quot;:&quot;123456789&quot;,&quot;cellPhone&quot;:&quot;123456789&quot;,&quot;email&quot;:&quot;john.smith@test.com&quot;}']"/>
        </mock:when>
        <munit:set payload="#['{&quot;merchantCustomerId&quot;:&quot;marchant-222221&quot;,&quot;locale&quot;:&quot;en_GB&quot;,&quot;firstName&quot;:&quot;John&quot;,&quot;middleName&quot;:&quot;&quot;,&quot;lastName&quot;:&quot;Smith&quot;,&quot;dateOfBirth&quot;:{&quot;year&quot;:&quot;1980&quot;,&quot;month&quot;:&quot;01&quot;,&quot;day&quot;:&quot;01&quot;},&quot;email&quot;:&quot;john.smith@test.com&quot;,&quot;phone&quot;:&quot;123456789&quot;,&quot;ip&quot;:&quot;12.12.12.12&quot;,&quot;cellPhone&quot;:&quot;123456789&quot;}']" mimeType="application/json" doc:name="Set Request Payload"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Request Payload \n merchantCustomerId : '+payload.merchantCustomerId+'\n locale : '+payload.locale+' \n firstName : '+payload.firstName+' \n middleName : '+payload.middleName+' \n lastName : '+payload.lastName+' \n year : '+payload.dateOfBirth.year+' \n month : '+payload.dateOfBirth.month+' \n day : '+payload.day+' \n email : '+payload.email+' \n phone : '+payload.phone+ '\n ip : '+payload.ip+' \n cellPhone : '+payload.cellPhone+'\n' ]" level="INFO" category="MUnit Test || CreateProfileSubFlow-TestCase7(SuccessScenario)" doc:name="Request Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <flow-ref name="createProfileSubFlow" doc:name="Flow-ref to createProfileSubFlow"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Response Payload \n id : '+payload.id+'\n status : '+payload.status+' \n merchantCustomerId : '+payload.merchantCustomerId+'\n locale : '+payload.locale+' \n firstName : '+payload.firstName+' \n middleName : '+payload.middleName+' \n lastName : '+payload.lastName+' \n year : '+payload.dateOfBirth.year+' \n month : '+payload.dateOfBirth.month+' \n day : '+payload.dateOfBirth.day+' \n ip : '+payload.ip+' \n paymentToken : '+payload.paymentToken+' \n phone : '+payload.phone+ '\n cellPhone : '+payload.cellPhone+ '\n email : '+payload.email+ '\n']" level="INFO" category="MUnit Test || CreateProfileSubFlow-TestCase7(SuccessScenario)" doc:name="Response Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <munit:assert-on-equals expectedValue="#['{&quot;lastName&quot;:&quot;Smith&quot;,&quot;ip&quot;:&quot;12.12.12.12&quot;,&quot;dateOfBirth&quot;:{&quot;year&quot;:1980,&quot;month&quot;:1,&quot;day&quot;:1},&quot;locale&quot;:&quot;en_GB&quot;,&quot;paymentToken&quot;:&quot;PeHh4RaQNcHCEgm&quot;,&quot;firstName&quot;:&quot;John&quot;,&quot;phone&quot;:&quot;123456789&quot;,&quot;merchantCustomerId&quot;:&quot;marchant-222221&quot;,&quot;middleName&quot;:&quot;&quot;,&quot;id&quot;:&quot;c567eb80-7d0b-4813-9b46-1819811e30ff&quot;,&quot;cellPhone&quot;:&quot;123456789&quot;,&quot;email&quot;:&quot;john.smith@test.com&quot;,&quot;status&quot;:&quot;ACTIVE&quot;}']" actualValue="#[payload]" doc:name="Check Response Payload" message="Response message is not valid as expected"/>
    </munit:test>
    <munit:test name="PreAuthorizationSubFlow-TestCase8(SuccessScenario)" description="Verifying Instrument-Create flow with test request for success scenario." >
        <mock:when messageProcessor=".*:.*" doc:name="Mock Pre Authorization API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Pre Authorization API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;links&quot;:[{&quot;rel&quot;:&quot;self&quot;,&quot;href&quot;:&quot;https://api.test.paysafe.com/cardpayments/v1/accounts/1001219270/auths/6e1524a1-517e-4353-8653-6b36742f377c&quot;}],&quot;id&quot;:&quot;6e1524a1-517e-4353-8653-6b36742f377c&quot;,&quot;merchantRefNum&quot;:&quot;marchant-22222111220180615132340&quot;,&quot;txnTime&quot;:&quot;2018-06-15T13:23:41Z&quot;,&quot;status&quot;:&quot;COMPLETED&quot;,&quot;amount&quot;:1,&quot;settleWithAuth&quot;:false,&quot;preAuth&quot;:false,&quot;availableToSettle&quot;:1,&quot;card&quot;:{&quot;type&quot;:&quot;VI&quot;,&quot;lastDigits&quot;:&quot;2345&quot;,&quot;cardExpiry&quot;:{&quot;month&quot;:1,&quot;year&quot;:2026}},&quot;authCode&quot;:&quot;100615&quot;,&quot;profile&quot;:{&quot;firstName&quot;:&quot;John&quot;,&quot;lastName&quot;:&quot;Smith&quot;,&quot;email&quot;:&quot;john.smith@test.com&quot;},&quot;billingDetails&quot;:{&quot;street&quot;:&quot;1 Some St&quot;,&quot;city&quot;:&quot;Somewhere&quot;,&quot;country&quot;:&quot;AU&quot;,&quot;zip&quot;:&quot;1234&quot;,&quot;phone&quot;:&quot;123456789&quot;},&quot;customerIp&quot;:&quot;12.12.12.12&quot;,&quot;merchantDescriptor&quot;:{&quot;dynamicDescriptor&quot;:&quot;DD Line 1&quot;,&quot;phone&quot;:&quot;000-111000099&quot;},&quot;visaAdditionalAuthData&quot;:{},&quot;description&quot;:&quot;Pre-Auth Checked&quot;,&quot;currencyCode&quot;:&quot;EUR&quot;,&quot;avsResponse&quot;:&quot;MATCH&quot;,&quot;cvvVerification&quot;:&quot;MATCH&quot;}']"/>
        </mock:when>
        <munit:set payload="#['{&quot;merchantRefNum&quot;:&quot;marchant-22222120180615132846&quot;,&quot;amount&quot;:1,&quot;settleWithAuth&quot;:false,&quot;dupCheck&quot;:true,&quot;card&quot;:{&quot;paymentToken&quot;:&quot;SC6781nzL2pG1PfQ&quot;},&quot;profile&quot;:{&quot;firstName&quot;:&quot;John&quot;,&quot;lastName&quot;:&quot;Smith&quot;,&quot;email&quot;:&quot;john.smith@test.com&quot;},&quot;billingDetails&quot;:{&quot;street&quot;:&quot;1 Some St&quot;,&quot;city&quot;:&quot;Somewhere&quot;,&quot;country&quot;:&quot;AU&quot;,&quot;zip&quot;:&quot;1234&quot;,&quot;phone&quot;:&quot;123456789&quot;},&quot;customerIp&quot;:&quot;12.12.12.12&quot;,&quot;description&quot;:&quot;Pre-Auth Checked&quot;}']" mimeType="application/json" doc:name="Set Request Payload"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message=" #['Request Payload \n merchantRefNum : '+payload.merchantRefNum+'\n amount : '+payload.amount+' \n settleWithAuth : '+payload.settleWithAuth+' \n dupCheck : '+payload.dupCheck+' \n  paymentToken : '+payload.card.paymentToken+' \n firstName : '+payload.profile.firstName+' \n lastName : '+payload.profile.lastName+' \n email : '+payload.profile.email+' \n street : '+payload.billingDetails.street+ '\n city : '+payload.billingDetails.city+ '\n country : '+payload.billingDetails.country+ '\n zip : '+payload.billingDetails.zip+ '\n phone : '+payload.billingDetails.phone+ '\n customerIp : '+payload.customerIp+ '\n description : '+payload.description+ '\n']" level="INFO" category="MUnit Test || PreAuthorizationSubFlow-TestCase8(SuccessScenario)" doc:name="Request Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <flow-ref name="preAuthorizationSubFlow" doc:name="Flow-ref to preAuthorizationSubFlow"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message=" #['Response Payload \n id : '+payload.id+' \n merchantRefNum : '+payload.merchantRefNum+' \n txnTime : '+payload.txnTime+' \n status : '+payload.status+' \n amount : '+payload.amount+' \n preAuth : '+payload.preAuth+' \n availableToSettle : '+payload.availableToSettle+' \n type : '+payload.card.type+' \n lastDigits : '+payload.card.lastDigits+' \n month : '+payload.card.cardExpiry.month+' \n year : '+payload.card.cardExpiry.year+' \n authCode : '+payload.authCode+' \n firstName : '+payload.profile.firstName+' \n lastName : '+payload.profile.lastName+' \n email : '+payload.profile.email+' \n street : '+payload.billingDetails.street+' \n city : '+payload.billingDetails.city+' \n country : '+payload.billingDetails.country+' \n zip : '+payload.billingDetails.zip+' \n phone : '+payload.billingDetails.phone+' \n customerIp : '+payload.customerIp+' \n dynamicDescriptor : '+payload.merchantDescriptor.dynamicDescriptor+' \n phone : '+payload.merchantDescriptor.phone+' \n description : '+payload.description+' \n currencyCode : '+payload.currencyCode+' \n avsResponse : '+payload.avsResponse+' \n cvvVerification : '+payload.cvvVerification+ '\n']" level="INFO" category="MUnit Test || PreAuthorizationSubFlow-TestCase8(SuccessScenario)" doc:name="Response Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <munit:assert-on-equals expectedValue="#['{&quot;amount&quot;:1,&quot;authCode&quot;:&quot;100615&quot;,&quot;billingDetails&quot;:{&quot;street&quot;:&quot;1 Some St&quot;,&quot;city&quot;:&quot;Somewhere&quot;,&quot;country&quot;:&quot;AU&quot;,&quot;zip&quot;:&quot;1234&quot;,&quot;phone&quot;:&quot;123456789&quot;},&quot;customerIp&quot;:&quot;12.12.12.12&quot;,&quot;profile&quot;:{&quot;firstName&quot;:&quot;John&quot;,&quot;lastName&quot;:&quot;Smith&quot;,&quot;email&quot;:&quot;john.smith@test.com&quot;},&quot;description&quot;:&quot;Pre-Auth Checked&quot;,&quot;merchantRefNum&quot;:&quot;marchant-22222111220180615132340&quot;,&quot;merchantDescriptor&quot;:{&quot;dynamicDescriptor&quot;:&quot;DD Line 1&quot;,&quot;phone&quot;:&quot;000-111000099&quot;},&quot;avsResponse&quot;:&quot;MATCH&quot;,&quot;visaAdditionalAuthData&quot;:{},&quot;cvvVerification&quot;:&quot;MATCH&quot;,&quot;settleWithAuth&quot;:false,&quot;txnTime&quot;:&quot;2018-06-15T13:23:41Z&quot;,&quot;links&quot;:[{&quot;rel&quot;:&quot;self&quot;,&quot;href&quot;:&quot;https://api.test.paysafe.com/cardpayments/v1/accounts/1001219270/auths/6e1524a1-517e-4353-8653-6b36742f377c&quot;}],&quot;id&quot;:&quot;6e1524a1-517e-4353-8653-6b36742f377c&quot;,&quot;preAuth&quot;:false,&quot;currencyCode&quot;:&quot;EUR&quot;,&quot;availableToSettle&quot;:1,&quot;card&quot;:{&quot;type&quot;:&quot;VI&quot;,&quot;lastDigits&quot;:&quot;2345&quot;,&quot;cardExpiry&quot;:{&quot;month&quot;:1,&quot;year&quot;:2026}},&quot;status&quot;:&quot;COMPLETED&quot;}']" actualValue="#[payload]" doc:name="Check Response Payload" message="Response message is not valid as expected"/>
    </munit:test>
    <munit:test name="InstrumentFlow-TestCase-9(FailureScenarioforCreateCard)" description="Create Card API gives Error Response because of incorrect gateway Nounce by Mocking PreAuth API so that Gateway Nounce will not effect it." >
        <mock:when messageProcessor=".*:.*" doc:name="Mock Pre Authorization API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#[' Pre Authorization API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;links&quot;:[{&quot;rel&quot;:&quot;self&quot;,&quot;href&quot;:&quot;https://api.test.paysafe.com/cardpayments/v1/accounts/1001219270/auths/6e1524a1-517e-4353-8653-6b36742f377c&quot;}],&quot;id&quot;:&quot;6e1524a1-517e-4353-8653-6b36742f377c&quot;,&quot;merchantRefNum&quot;:&quot;marchant-22222111220180615132340&quot;,&quot;txnTime&quot;:&quot;2018-06-15T13:23:41Z&quot;,&quot;status&quot;:&quot;COMPLETED&quot;,&quot;amount&quot;:1,&quot;settleWithAuth&quot;:false,&quot;preAuth&quot;:false,&quot;availableToSettle&quot;:1,&quot;card&quot;:{&quot;type&quot;:&quot;VI&quot;,&quot;lastDigits&quot;:&quot;2345&quot;,&quot;cardExpiry&quot;:{&quot;month&quot;:1,&quot;year&quot;:2026}},&quot;authCode&quot;:&quot;100615&quot;,&quot;profile&quot;:{&quot;firstName&quot;:&quot;John&quot;,&quot;lastName&quot;:&quot;Smith&quot;,&quot;email&quot;:&quot;john.smith@test.com&quot;},&quot;billingDetails&quot;:{&quot;street&quot;:&quot;1 Some St&quot;,&quot;city&quot;:&quot;Somewhere&quot;,&quot;country&quot;:&quot;AU&quot;,&quot;zip&quot;:&quot;1234&quot;,&quot;phone&quot;:&quot;123456789&quot;},&quot;customerIp&quot;:&quot;12.12.12.12&quot;,&quot;merchantDescriptor&quot;:{&quot;dynamicDescriptor&quot;:&quot;DD Line 1&quot;,&quot;phone&quot;:&quot;000-111000099&quot;},&quot;visaAdditionalAuthData&quot;:{},&quot;description&quot;:&quot;Pre-Auth Checked&quot;,&quot;currencyCode&quot;:&quot;EUR&quot;,&quot;avsResponse&quot;:&quot;MATCH&quot;,&quot;cvvVerification&quot;:&quot;MATCH&quot;}']"/>
        </mock:when>
        <mock:when messageProcessor=".*:.*" doc:name="Mock CreateProfileAPI">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Create Profile API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;id&quot;:&quot;c567eb80-7d0b-4813-9b46-1819811e30ff&quot;,&quot;status&quot;:&quot;ACTIVE&quot;,&quot;merchantCustomerId&quot;:&quot;marchant-222221&quot;,&quot;locale&quot;:&quot;en_GB&quot;,&quot;firstName&quot;:&quot;John&quot;,&quot;middleName&quot;:&quot;&quot;,&quot;lastName&quot;:&quot;Smith&quot;,&quot;dateOfBirth&quot;:{&quot;year&quot;:1980,&quot;month&quot;:1,&quot;day&quot;:1},&quot;ip&quot;:&quot;12.12.12.12&quot;,&quot;paymentToken&quot;:&quot;PeHh4RaQNcHCEgm&quot;,&quot;phone&quot;:&quot;123456789&quot;,&quot;cellPhone&quot;:&quot;123456789&quot;,&quot;email&quot;:&quot;john.smith@test.com&quot;}']"/>
        </mock:when>
        <munit:set payload="#['{&quot;Instrument&quot;:{&quot;InstrumentId&quot;:&quot;marchant-222221&quot;,&quot;type&quot;:&quot;Card account&quot;,&quot;SubType&quot;:&quot;Visa&quot;,&quot;GatewayNonce&quot;:&quot;SNm7omYngPr&quot;,&quot;GatewayToken&quot;:&quot;&quot;,&quot;LegalEntity&quot;:&quot;Axicorp Limited&quot;,&quot;Currency&quot;:&quot;GBP&quot;,&quot;HolderName&quot;:&quot;NJogn T Smith&quot;,&quot;Identifier&quot;:&quot;1234&quot;,&quot;ExpiryDate&quot;:&quot;2020-02-29&quot;,&quot;TagName&quot;:&quot;MyHSBCCard&quot;,&quot;AdditionalInfo&quot;:{}},&quot;Client&quot;:{&quot;ClientId&quot;:&quot;marchant-222221&quot;,&quot;ProfileId&quot;:&quot;&quot;,&quot;FirstName&quot;:&quot;John&quot;,&quot;MiddleName&quot;:&quot;&quot;,&quot;LastName&quot;:&quot;Smith&quot;,&quot;DOB&quot;:&quot;1980-01-01&quot;,&quot;Email&quot;:&quot;john.smith@test.com&quot;,&quot;Phone&quot;:&quot;123456789&quot;,&quot;Mobile&quot;:&quot;123456789&quot;,&quot;Address&quot;:&quot;1 Some St&quot;,&quot;City&quot;:&quot;Somewhere&quot;,&quot;State&quot;:&quot;ON&quot;,&quot;PostCode&quot;:&quot;1234&quot;,&quot;CountryA2&quot;:&quot;AU&quot;,&quot;CountryA3&quot;:&quot;AUS&quot;,&quot;ClientIP&quot;:&quot;12.12.12.12&quot;,&quot;AdditionalInfo&quot;:{&quot;Locale&quot;:&quot;en_GB&quot;}},&quot;AdditionalInfo&quot;:{}}']" mimeType="application/json" doc:name="Set Request Payload"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Request Payload \n GatewayNonce : '+payload.Instrument.GatewayNonce+'\n GatewayToken : '+payload.Instrument.GatewayToken+'\n LegalEntity : '+payload.Instrument.LegalEntity+'\n Currency : '+payload.Instrument.Currency+'\n ExpiryDate : '+payload.Instrument.ExpiryDate+'\n ProfileId : '+payload.Client.ProfileId+'\n ClientId : '+payload.Client.ClientId+'\n CountryA2 : '+payload.Client.CountryA2+'\n PostCode : '+payload.Client.PostCode+'\n FirstName : '+payload.Client.FirstName+'\n LastName : '+payload.Client.LastName+'\n Email : '+payload.Client.Email+'\n Address : '+payload.Client.Address+'\n Locale : '+payload.Client.AdditionalInfo.Locale+'\n']" level="INFO" category="MUnit Test || InstrumentFlow-TestCase-9(FailureScenarioforCreateCard)" doc:name="Request Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <flow-ref name="instrumentFlow" doc:name="Flow-ref to instrument Flow"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Response Payload \n InstrumentId : '+payload.Instrument.InstrumentId+'\n GatewayToken : '+payload.Instrument.GatewayToken+'\n ProfileId : '+payload.Instrument.ProfileId+' \n Gateway Response Message : '+payload.Instrument.GatewayResponseMessage+' \n Gateway Response Code : '+payload.Instrument.GatewayResponseCode+'\n type : '+payload.Instrument.type+'\n SubType : '+payload.Instrument.SubType+'\n IsDebit : '+payload.Instrument.IsDebit+'\n HolderName : '+payload.Instrument.HolderName+'\n Identifier : '+payload.Instrument.Identifier+'\n ExpiryDate : '+payload.Instrument.ExpiryDate+'\n IssuedCountry : '+payload.Instrument.IssuedCountry+'\n ClientId : '+payload.Client.ClientId+'\n']" level="INFO" category="MUnit Test || InstrumentFlow-TestCase-9(FailureScenarioforCreateCard)" doc:name="Response Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <munit:assert-on-equals expectedValue="#['{&quot;Instrument&quot;:{&quot;InstrumentId&quot;:&quot;&quot;,&quot;ProfileId&quot;:&quot;&quot;,&quot;GatewayToken&quot;:&quot;&quot;,&quot;GatewayResponseCode&quot;:&quot;5500&quot;,&quot;GatewayResponseMessage&quot;:&quot;Either the payment token is invalid or the corresponding profile or credit card is not active.&quot;,&quot;GatewayStatus&quot;:&quot;FAILED&quot;,&quot;type&quot;:&quot;&quot;,&quot;SubType&quot;:&quot;&quot;,&quot;IsDebit&quot;:&quot;&quot;,&quot;HolderName&quot;:&quot;&quot;,&quot;Identifier&quot;:&quot;&quot;,&quot;ExpiryDate&quot;:&quot;&quot;,&quot;IssuedCountry&quot;:&quot;&quot;,&quot;AdditionalInfo&quot;:{&quot;AVS&quot;:&quot;&quot;,&quot;CVV&quot;:&quot;&quot;}},&quot;Client&quot;:{&quot;ClientId&quot;:&quot;marchant-222221&quot;,&quot;AdditionalInfo&quot;:{}}}']" actualValue="#[payload]" doc:name="Check Response Payload" message="Response message is not valid as expected"/>
    </munit:test>
    <munit:test name="InstrumentFlow-TestCase-1(SuccessScenarioforUpdateAll)" description="Verifying Instrument flow with test request for Update Profile , Card and Address success scenario." >
        <mock:when messageProcessor=".*:.*" doc:name="Mock Get Profile API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Get Profile API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;id&quot;:&quot;aad6395c-1a68-483e-90ef-f1da1139d0b6&quot;,&quot;status&quot;:&quot;ACTIVE&quot;,&quot;merchantCustomerId&quot;:&quot;marchant-99944&quot;,&quot;locale&quot;:&quot;en_GB&quot;,&quot;firstName&quot;:&quot;John&quot;,&quot;lastName&quot;:&quot;Smith&quot;,&quot;dateOfBirth&quot;:{&quot;year&quot;:1980,&quot;month&quot;:11,&quot;day&quot;:11},&quot;ip&quot;:&quot;12.12.12.12&quot;,&quot;paymentToken&quot;:&quot;PEhTAGV4V43NRcx&quot;,&quot;phone&quot;:&quot;123456789&quot;,&quot;cellPhone&quot;:&quot;123456789&quot;,&quot;email&quot;:&quot;john.smith@test.com&quot;,&quot;addresses&quot;:[{&quot;id&quot;:&quot;8c18c9ef-1eb7-47eb-bf69-4b7d21c2320c&quot;,&quot;street&quot;:&quot;1 Some test&quot;,&quot;city&quot;:&quot;Somewhere&quot;,&quot;country&quot;:&quot;AU&quot;,&quot;state&quot;:&quot;ON&quot;,&quot;zip&quot;:&quot;1234&quot;,&quot;phone&quot;:&quot;123456789&quot;,&quot;defaultShippingAddressIndicator&quot;:false,&quot;status&quot;:&quot;ACTIVE&quot;}],&quot;cards&quot;:[{&quot;status&quot;:&quot;ACTIVE&quot;,&quot;id&quot;:&quot;fd54d65e-dea4-4a7c-8b03-e796b3d6f07c&quot;,&quot;cardBin&quot;:&quot;451015&quot;,&quot;lastDigits&quot;:&quot;0321&quot;,&quot;cardExpiry&quot;:{&quot;year&quot;:2025,&quot;month&quot;:2},&quot;holderName&quot;:&quot;NJogn T Smith&quot;,&quot;nickName&quot;:&quot;MyHSBCCard&quot;,&quot;merchantRefNum&quot;:&quot;marchant-99944&quot;,&quot;cardType&quot;:&quot;VI&quot;,&quot;paymentToken&quot;:&quot;CEMNzRhpUWtqHyL&quot;}]}']"/>
        </mock:when>
        <mock:when messageProcessor=".*:.*" doc:name="Mock Update Profile API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Update Profile API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;id&quot;:&quot;aad6395c-1a68-483e-90ef-f1da1139d0b6&quot;,&quot;status&quot;:&quot;ACTIVE&quot;,&quot;merchantCustomerId&quot;:&quot;marchant-99944&quot;,&quot;locale&quot;:&quot;en_GB&quot;,&quot;firstName&quot;:&quot;Jolly&quot;,&quot;middleName&quot;:&quot;Walls&quot;,&quot;lastName&quot;:&quot;Smith&quot;,&quot;dateOfBirth&quot;:{&quot;year&quot;:1980,&quot;month&quot;:11,&quot;day&quot;:11},&quot;ip&quot;:&quot;12.12.12.12&quot;,&quot;paymentToken&quot;:&quot;PEhTAGV4V43NRcx&quot;,&quot;phone&quot;:&quot;123456789&quot;,&quot;cellPhone&quot;:&quot;123456789&quot;,&quot;email&quot;:&quot;john.smith@test.com&quot;}']"/>
        </mock:when>
        <mock:when messageProcessor=".*:.*" doc:name="Mock Update Card API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Update Card API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;status&quot;:&quot;ACTIVE&quot;,&quot;id&quot;:&quot;fd54d65e-dea4-4a7c-8b03-e796b3d6f07c&quot;,&quot;cardBin&quot;:&quot;451015&quot;,&quot;lastDigits&quot;:&quot;0321&quot;,&quot;cardExpiry&quot;:{&quot;year&quot;:2029,&quot;month&quot;:11},&quot;holderName&quot;:&quot;Walls T Smith&quot;,&quot;nickName&quot;:&quot;MyHSBCCard&quot;,&quot;merchantRefNum&quot;:&quot;marchant-99944&quot;,&quot;cardType&quot;:&quot;VI&quot;,&quot;paymentToken&quot;:&quot;CEMNzRhpUWtqHyL&quot;,&quot;defaultCardIndicator&quot;:true}']"/>
        </mock:when>
        <mock:when messageProcessor=".*:.*" doc:name="Mock Update Address API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Update Address API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;id&quot;:&quot;8c18c9ef-1eb7-47eb-bf69-4b7d21c2320c&quot;,&quot;street&quot;:&quot;115 Clock tower&quot;,&quot;city&quot;:&quot;Sydney&quot;,&quot;country&quot;:&quot;AU&quot;,&quot;state&quot;:&quot;ON&quot;,&quot;zip&quot;:&quot;1234&quot;,&quot;phone&quot;:&quot;123456789&quot;,&quot;defaultShippingAddressIndicator&quot;:false,&quot;status&quot;:&quot;ACTIVE&quot;}']"/>
        </mock:when>
        <munit:set payload="#['{&quot;Instrument&quot;:{&quot;InstrumentId&quot;:&quot;marchant-99944&quot;,&quot;type&quot;:&quot;Card account&quot;,&quot;SubType&quot;:&quot;Visa&quot;,&quot;GatewayNonce&quot;:&quot;&quot;,&quot;GatewayToken&quot;:&quot;CEMNzRhpUWtqHyL&quot;,&quot;LegalEntity&quot;:&quot;Axicorp Limited&quot;,&quot;Currency&quot;:&quot;GBP&quot;,&quot;HolderName&quot;:&quot;Walls T Smith&quot;,&quot;Identifier&quot;:&quot;0321&quot;,&quot;ExpiryDate&quot;:&quot;2029-11-30&quot;,&quot;TagName&quot;:&quot;MyHSBCCard&quot;,&quot;AdditionalInfo&quot;:{}},&quot;Client&quot;:{&quot;ClientId&quot;:&quot;marchant-99944&quot;,&quot;ProfileId&quot;:&quot;aad6395c-1a68-483e-90ef-f1da1139d0b6&quot;,&quot;FirstName&quot;:&quot;Jolly&quot;,&quot;MiddleName&quot;:&quot;Walls&quot;,&quot;LastName&quot;:&quot;Smith&quot;,&quot;DOB&quot;:&quot;1980-11-11&quot;,&quot;Email&quot;:&quot;john.smith@test.com&quot;,&quot;Phone&quot;:&quot;123456789&quot;,&quot;Mobile&quot;:&quot;123456789&quot;,&quot;Address&quot;:&quot;115 Clock tower&quot;,&quot;City&quot;:&quot;Sydney&quot;,&quot;State&quot;:&quot;ON&quot;,&quot;PostCode&quot;:&quot;1234&quot;,&quot;CountryA2&quot;:&quot;AU&quot;,&quot;CountryA3&quot;:&quot;AUS&quot;,&quot;ClientIP&quot;:&quot;12.12.12.12&quot;,&quot;AdditionalInfo&quot;:{&quot;Locale&quot;:&quot;en_GB&quot;}},&quot;AdditionalInfo&quot;:{}}']" doc:name="Set Request Payload" mimeType="application/json"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Request Payload \n InstrumentId :'+payload.Instrument.InstrumentId + '\n Type:'+payload.Instrument.type+'\n SubType:'+payload.Instrument.SubType+'\n GatewayNonce:'+payload.Instrument.GatewayNonce+'\n GatewayToken:'+payload.Instrument.GatewayToken+'\n LegalEntity:'+payload.Instrument.LegalEntity+'\n Currency:'+payload.Instrument.Currency+'\n HolderName:'+payload.Instrument.HolderName+'\n Identifier:'+payload.Instrument.Identifier+'\n ExpiryDate:'+payload.Instrument.ExpiryDate+'\n TagName:'+payload.Instrument.TagName+'\n ClientId:'+payload.Client.ClientId+'\n ProfileId:'+payload.Client.ProfileId+'\n FirstName:'+payload.Client.FirstName+'\n MiddleName:'+payload.Client.MiddleName+'\n LastName:'+payload.Client.LastName+'\n DOB:'+payload.Client.DOB+'\n Email:'+payload.Client.Email+'\n Phone:'+payload.Client.Phone+'\n Mobile:'+payload.Client.Mobile+'\n Address:'+payload.Client.Address+'\n City:'+payload.Client.City+'\n State:'+payload.Client.State+'\n PostCode:'+payload.Client.PostCode+'\n CountryA2:'+payload.Client.CountryA2+'\n CountryA3:'+payload.Client.CountryA3+'\n ClientIP:'+payload.Client.ClientIP+'\n Locale:'+payload.Client.AdditionalInfo.Locale+'\n']" level="INFO" category="MUnit Test || instrumentFlow-TestCase1(SuccessScenarioforUpdateAll)" doc:name="Request Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <flow-ref name="instrumentFlow" doc:name="Flow-ref to instrument Flow"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Response Payload \n InstrumentId : '+payload.Instrument.InstrumentId+'\n ProfileId : '+payload.Instrument.ProfileId+'\n type : '+payload.Instrument.type+'\n CardToken : '+payload.CardToken+'\n SubType: '+payload.Instrument.SubType+'\n IsDebit:'+payload.Instrument.IsDebit+'\n HolderName:'+payload.Instrument.HolderName+'\n Identifier:'+payload.Instrument.Identifier+'\n ExpiryDate:'+payload.Instrument.ExpiryDate+'\n IssuedCountry:'+payload.Instrument.IssuedCountry+'\n AdditionalInfo:'+payload.Instrument.AdditionalInfo+'\n ClientId:'+payload.Client.ClientId+'\n AdditionalInfo:'+payload.Client.AdditionalInfo+'\n']" level="INFO" category="MUnit Test || instrumentFlow-TestCase1(SuccessScenarioforUpdateAll)" doc:name="Response Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <munit:assert-on-equals expectedValue="#['{&quot;Instrument&quot;:{&quot;InstrumentId&quot;:&quot;marchant-99944&quot;,&quot;ProfileId&quot;:&quot;aad6395c-1a68-483e-90ef-f1da1139d0b6&quot;,&quot;GatewayToken&quot;:&quot;CEMNzRhpUWtqHyL&quot;,&quot;GatewayResponseCode&quot;:&quot;&quot;,&quot;GatewayResponseMessage&quot;:&quot;&quot;,&quot;GatewayStatus&quot;:&quot;SUCCESS&quot;,&quot;type&quot;:&quot;Card account&quot;,&quot;SubType&quot;:&quot;Visa&quot;,&quot;IsDebit&quot;:&quot;false&quot;,&quot;HolderName&quot;:&quot;Walls T Smith&quot;,&quot;Identifier&quot;:&quot;0321&quot;,&quot;ExpiryDate&quot;:&quot;2029-11-30&quot;,&quot;IssuedCountry&quot;:&quot;&quot;,&quot;AdditionalInfo&quot;:{}},&quot;Client&quot;:{&quot;ClientId&quot;:&quot;marchant-99944&quot;,&quot;AdditionalInfo&quot;:{}}}']" actualValue="#[payload]" doc:name="Check Response Payload" message="Response message is not valid as expected"/>
    </munit:test>
    <munit:test name="InstrumentFlow-TestCase-2(SuccessScenarioforUpdateProfileAndCard)" description="Verifying Instrument flow with test request for Update Profile and Card  success scenario." >
        <mock:when messageProcessor=".*:.*" doc:name="Mock Get Profile API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Get Profile API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;id&quot;:&quot;aad6395c-1a68-483e-90ef-f1da1139d0b6&quot;,&quot;status&quot;:&quot;ACTIVE&quot;,&quot;merchantCustomerId&quot;:&quot;marchant-99944&quot;,&quot;locale&quot;:&quot;en_GB&quot;,&quot;firstName&quot;:&quot;Jedfe&quot;,&quot;middleName&quot;:&quot;Walls&quot;,&quot;lastName&quot;:&quot;Smith&quot;,&quot;dateOfBirth&quot;:{&quot;year&quot;:1980,&quot;month&quot;:11,&quot;day&quot;:11},&quot;ip&quot;:&quot;12.12.12.12&quot;,&quot;paymentToken&quot;:&quot;PEhTAGV4V43NRcx&quot;,&quot;phone&quot;:&quot;123456789&quot;,&quot;cellPhone&quot;:&quot;123456789&quot;,&quot;email&quot;:&quot;john.smith@test.com&quot;,&quot;addresses&quot;:[{&quot;id&quot;:&quot;8c18c9ef-1eb7-47eb-bf69-4b7d21c2320c&quot;,&quot;street&quot;:&quot;1 Som test1&quot;,&quot;city&quot;:&quot;Somewhere&quot;,&quot;country&quot;:&quot;AU&quot;,&quot;state&quot;:&quot;ON&quot;,&quot;zip&quot;:&quot;1234&quot;,&quot;phone&quot;:&quot;123456789&quot;,&quot;defaultShippingAddressIndicator&quot;:false,&quot;status&quot;:&quot;ACTIVE&quot;}],&quot;cards&quot;:[{&quot;status&quot;:&quot;ACTIVE&quot;,&quot;id&quot;:&quot;fd54d65e-dea4-4a7c-8b03-e796b3d6f07c&quot;,&quot;cardBin&quot;:&quot;451015&quot;,&quot;lastDigits&quot;:&quot;0321&quot;,&quot;cardExpiry&quot;:{&quot;year&quot;:2022,&quot;month&quot;:11},&quot;holderName&quot;:&quot;Jogn T Smith&quot;,&quot;nickName&quot;:&quot;MyHSBCCard&quot;,&quot;merchantRefNum&quot;:&quot;marchant-99944&quot;,&quot;cardType&quot;:&quot;VI&quot;,&quot;paymentToken&quot;:&quot;CEMNzRhpUWtqHyL&quot;}]}']"/>
        </mock:when>
        <mock:when messageProcessor=".*:.*" doc:name="Mock Update Profile API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Update Profile API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;id&quot;:&quot;aad6395c-1a68-483e-90ef-f1da1139d0b6&quot;,&quot;status&quot;:&quot;ACTIVE&quot;,&quot;merchantCustomerId&quot;:&quot;marchant-99944&quot;,&quot;locale&quot;:&quot;en_GB&quot;,&quot;firstName&quot;:&quot;James&quot;,&quot;middleName&quot;:&quot;Walls&quot;,&quot;lastName&quot;:&quot;Smith&quot;,&quot;dateOfBirth&quot;:{&quot;year&quot;:1980,&quot;month&quot;:11,&quot;day&quot;:11},&quot;ip&quot;:&quot;12.12.12.12&quot;,&quot;paymentToken&quot;:&quot;PEhTAGV4V43NRcx&quot;,&quot;phone&quot;:&quot;123456789&quot;,&quot;cellPhone&quot;:&quot;123456789&quot;,&quot;email&quot;:&quot;john.smith@test.com&quot;}']"/>
        </mock:when>
        <mock:when messageProcessor=".*:.*" doc:name="Mock Update Card API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Update Card API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;status&quot;:&quot;ACTIVE&quot;,&quot;id&quot;:&quot;fd54d65e-dea4-4a7c-8b03-e796b3d6f07c&quot;,&quot;cardBin&quot;:&quot;451015&quot;,&quot;lastDigits&quot;:&quot;0321&quot;,&quot;cardExpiry&quot;:{&quot;year&quot;:2020,&quot;month&quot;:11},&quot;holderName&quot;:&quot;Jogn T Smith&quot;,&quot;nickName&quot;:&quot;MyHSBCCard&quot;,&quot;merchantRefNum&quot;:&quot;marchant-99944&quot;,&quot;cardType&quot;:&quot;VI&quot;,&quot;paymentToken&quot;:&quot;CEMNzRhpUWtqHyL&quot;,&quot;defaultCardIndicator&quot;:true}']"/>
        </mock:when>
        <munit:set payload="#['{&quot;Instrument&quot;:{&quot;InstrumentId&quot;:&quot;marchant-99944&quot;,&quot;type&quot;:&quot;Card account&quot;,&quot;SubType&quot;:&quot;Visa&quot;,&quot;GatewayNonce&quot;:&quot;&quot;,&quot;GatewayToken&quot;:&quot;CEMNzRhpUWtqHyL&quot;,&quot;LegalEntity&quot;:&quot;Axicorp Limited&quot;,&quot;Currency&quot;:&quot;GBP&quot;,&quot;HolderName&quot;:&quot;Jogn T Smith&quot;,&quot;Identifier&quot;:&quot;0321&quot;,&quot;ExpiryDate&quot;:&quot;2020-11-30&quot;,&quot;TagName&quot;:&quot;MyHSBCCard&quot;,&quot;AdditionalInfo&quot;:{}},&quot;Client&quot;:{&quot;ClientId&quot;:&quot;marchant-99944&quot;,&quot;ProfileId&quot;:&quot;aad6395c-1a68-483e-90ef-f1da1139d0b6&quot;,&quot;FirstName&quot;:&quot;James&quot;,&quot;MiddleName&quot;:&quot;Walls&quot;,&quot;LastName&quot;:&quot;Smith&quot;,&quot;DOB&quot;:&quot;1980-11-11&quot;,&quot;Email&quot;:&quot;john.smith@test.com&quot;,&quot;Phone&quot;:&quot;123456789&quot;,&quot;Mobile&quot;:&quot;123456789&quot;,&quot;Address&quot;:&quot;1 Som test1&quot;,&quot;City&quot;:&quot;Somewhere&quot;,&quot;State&quot;:&quot;ON&quot;,&quot;PostCode&quot;:&quot;1234&quot;,&quot;CountryA2&quot;:&quot;AU&quot;,&quot;CountryA3&quot;:&quot;AUS&quot;,&quot;ClientIP&quot;:&quot;12.12.12.12&quot;,&quot;AdditionalInfo&quot;:{&quot;Locale&quot;:&quot;en_GB&quot;}},&quot;AdditionalInfo&quot;:{}}']" doc:name="Set Request Payload" mimeType="application/json"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Request Payload \n InstrumentId :'+payload.Instrument.InstrumentId + '\n Type:'+payload.Instrument.type+'\n SubType:'+payload.Instrument.SubType+'\n GatewayNonce:'+payload.Instrument.GatewayNonce+'\n GatewayToken:'+payload.Instrument.GatewayToken+'\n LegalEntity:'+payload.Instrument.LegalEntity+'\n Currency:'+payload.Instrument.Currency+'\n HolderName:'+payload.Instrument.HolderName+'\n Identifier:'+payload.Instrument.Identifier+'\n ExpiryDate:'+payload.Instrument.ExpiryDate+'\n TagName:'+payload.Instrument.TagName+'\n ClientId:'+payload.Client.ClientId+'\n ProfileId:'+payload.Client.ProfileId+'\n FirstName:'+payload.Client.FirstName+'\n MiddleName:'+payload.Client.MiddleName+'\n LastName:'+payload.Client.LastName+'\n DOB:'+payload.Client.DOB+'\n Email:'+payload.Client.Email+'\n Phone:'+payload.Client.Phone+'\n Mobile:'+payload.Client.Mobile+'\n Address:'+payload.Client.Address+'\n City:'+payload.Client.City+'\n State:'+payload.Client.State+'\n PostCode:'+payload.Client.PostCode+'\n CountryA2:'+payload.Client.CountryA2+'\n CountryA3:'+payload.Client.CountryA3+'\n ClientIP:'+payload.Client.ClientIP+'\n Locale:'+payload.Client.AdditionalInfo.Locale+'\n']" level="INFO" category="MUnit Test || instrumentFlow-TestCase2(SuccessScenarioforUpdateProfile&amp;Card)" doc:name="Request Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <flow-ref name="instrumentFlow" doc:name="Flow-ref to instrument Flow"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Response Payload \n InstrumentId : '+payload.Instrument.InstrumentId+'\n ProfileId : '+payload.Instrument.ProfileId+'\n GatewayToken : '+payload.Instrument.GatewayToken+'\n type : '+payload.Instrument.type+'\n SubType: '+payload.Instrument.SubType+'\n IsDebit:'+payload.Instrument.IsDebit+'\n HolderName:'+payload.Instrument.HolderName+'\n Identifier:'+payload.Instrument.Identifier+'\n ExpiryDate:'+payload.Instrument.ExpiryDate+'\n IssuedCountry:'+payload.Instrument.IssuedCountry+'\n AdditionalInfo:'+payload.Instrument.AdditionalInfo+'\n ClientId:'+payload.Client.ClientId+'\n AdditionalInfo:'+payload.Client.AdditionalInfo+'\n']" level="INFO" category="MUnit Test || instrumentFlow-TestCase2(SuccessScenarioforUpdateProfile&amp;Card)" doc:name="Response Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <munit:assert-on-equals expectedValue="#['{&quot;Instrument&quot;:{&quot;InstrumentId&quot;:&quot;marchant-99944&quot;,&quot;ProfileId&quot;:&quot;aad6395c-1a68-483e-90ef-f1da1139d0b6&quot;,&quot;GatewayToken&quot;:&quot;CEMNzRhpUWtqHyL&quot;,&quot;GatewayResponseCode&quot;:&quot;&quot;,&quot;GatewayResponseMessage&quot;:&quot;&quot;,&quot;GatewayStatus&quot;:&quot;SUCCESS&quot;,&quot;type&quot;:&quot;Card account&quot;,&quot;SubType&quot;:&quot;Visa&quot;,&quot;IsDebit&quot;:&quot;false&quot;,&quot;HolderName&quot;:&quot;Jogn T Smith&quot;,&quot;Identifier&quot;:&quot;0321&quot;,&quot;ExpiryDate&quot;:&quot;2020-11-30&quot;,&quot;IssuedCountry&quot;:&quot;&quot;,&quot;AdditionalInfo&quot;:{}},&quot;Client&quot;:{&quot;ClientId&quot;:&quot;marchant-99944&quot;,&quot;AdditionalInfo&quot;:{}}}']" actualValue="#[payload]" doc:name="Check Response Payload" message="Response message is not valid as expected"/>
    </munit:test>
     <munit:test name="InstrumentFlow-TestCase-3(SuccessScenarioforUpdateProfileandAddress)" description="Verifying Instrument flow with test request for Update Profile and Address success scenario.">
        <mock:when messageProcessor=".*:.*" doc:name="Mock Get Profile API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Get Profile API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;id&quot;:&quot;aad6395c-1a68-483e-90ef-f1da1139d0b6&quot;,&quot;status&quot;:&quot;ACTIVE&quot;,&quot;merchantCustomerId&quot;:&quot;marchant-99944&quot;,&quot;locale&quot;:&quot;en_GB&quot;,&quot;firstName&quot;:&quot;James&quot;,&quot;middleName&quot;:&quot;Walls&quot;,&quot;lastName&quot;:&quot;Smith&quot;,&quot;dateOfBirth&quot;:{&quot;year&quot;:1980,&quot;month&quot;:11,&quot;day&quot;:11},&quot;ip&quot;:&quot;12.12.12.12&quot;,&quot;paymentToken&quot;:&quot;PEhTAGV4V43NRcx&quot;,&quot;phone&quot;:&quot;123456789&quot;,&quot;cellPhone&quot;:&quot;123456789&quot;,&quot;email&quot;:&quot;john.smith@test.com&quot;,&quot;addresses&quot;:[{&quot;id&quot;:&quot;8c18c9ef-1eb7-47eb-bf69-4b7d21c2320c&quot;,&quot;street&quot;:&quot;1 Som test1&quot;,&quot;city&quot;:&quot;Somewhere&quot;,&quot;country&quot;:&quot;AU&quot;,&quot;state&quot;:&quot;ON&quot;,&quot;zip&quot;:&quot;1234&quot;,&quot;phone&quot;:&quot;123456789&quot;,&quot;defaultShippingAddressIndicator&quot;:false,&quot;status&quot;:&quot;ACTIVE&quot;}],&quot;cards&quot;:[{&quot;status&quot;:&quot;ACTIVE&quot;,&quot;id&quot;:&quot;fd54d65e-dea4-4a7c-8b03-e796b3d6f07c&quot;,&quot;cardBin&quot;:&quot;451015&quot;,&quot;lastDigits&quot;:&quot;0321&quot;,&quot;cardExpiry&quot;:{&quot;year&quot;:2020,&quot;month&quot;:11},&quot;holderName&quot;:&quot;Jogn T Smith&quot;,&quot;nickName&quot;:&quot;MyHSBCCard&quot;,&quot;merchantRefNum&quot;:&quot;marchant-99944&quot;,&quot;cardType&quot;:&quot;VI&quot;,&quot;paymentToken&quot;:&quot;CEMNzRhpUWtqHyL&quot;}]}']"/>
        </mock:when>
        <mock:when messageProcessor=".*:.*" doc:name="Mock Update Profile API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Update Profile API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;id&quot;:&quot;aad6395c-1a68-483e-90ef-f1da1139d0b6&quot;,&quot;status&quot;:&quot;ACTIVE&quot;,&quot;merchantCustomerId&quot;:&quot;marchant-99944&quot;,&quot;locale&quot;:&quot;en_GB&quot;,&quot;firstName&quot;:&quot;Jacob&quot;,&quot;middleName&quot;:&quot;Walls&quot;,&quot;lastName&quot;:&quot;Smith&quot;,&quot;dateOfBirth&quot;:{&quot;year&quot;:1980,&quot;month&quot;:11,&quot;day&quot;:11},&quot;ip&quot;:&quot;12.12.12.12&quot;,&quot;paymentToken&quot;:&quot;PEhTAGV4V43NRcx&quot;,&quot;phone&quot;:&quot;123456789&quot;,&quot;cellPhone&quot;:&quot;123456789&quot;,&quot;email&quot;:&quot;john.smith@test.com&quot;}']"/>
        </mock:when>
        <mock:when messageProcessor=".*:.*" doc:name="Mock Update Address API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Update Address API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;id&quot;:&quot;8c18c9ef-1eb7-47eb-bf69-4b7d21c2320c&quot;,&quot;street&quot;:&quot;1 cannes test1&quot;,&quot;city&quot;:&quot;Somewhere&quot;,&quot;country&quot;:&quot;AU&quot;,&quot;state&quot;:&quot;ON&quot;,&quot;zip&quot;:&quot;1234&quot;,&quot;phone&quot;:&quot;123456789&quot;,&quot;defaultShippingAddressIndicator&quot;:false,&quot;status&quot;:&quot;ACTIVE&quot;}']"/>
        </mock:when>
        <munit:set payload="#['{&quot;Instrument&quot;:{&quot;InstrumentId&quot;:&quot;marchant-99944&quot;,&quot;type&quot;:&quot;Card account&quot;,&quot;SubType&quot;:&quot;Visa&quot;,&quot;GatewayNonce&quot;:&quot;&quot;,&quot;GatewayToken&quot;:&quot;CEMNzRhpUWtqHyL&quot;,&quot;LegalEntity&quot;:&quot;Axicorp Limited&quot;,&quot;Currency&quot;:&quot;GBP&quot;,&quot;HolderName&quot;:&quot;Jogn T Smith&quot;,&quot;Identifier&quot;:&quot;0321&quot;,&quot;ExpiryDate&quot;:&quot;2020-11-30&quot;,&quot;TagName&quot;:&quot;MyHSBCCard&quot;,&quot;AdditionalInfo&quot;:{}},&quot;Client&quot;:{&quot;ClientId&quot;:&quot;marchant-99944&quot;,&quot;ProfileId&quot;:&quot;aad6395c-1a68-483e-90ef-f1da1139d0b6&quot;,&quot;FirstName&quot;:&quot;Jacob&quot;,&quot;MiddleName&quot;:&quot;Walls&quot;,&quot;LastName&quot;:&quot;Smith&quot;,&quot;DOB&quot;:&quot;1980-11-11&quot;,&quot;Email&quot;:&quot;john.smith@test.com&quot;,&quot;Phone&quot;:&quot;123456789&quot;,&quot;Mobile&quot;:&quot;123456789&quot;,&quot;Address&quot;:&quot;1 cannes test1&quot;,&quot;City&quot;:&quot;Somewhere&quot;,&quot;State&quot;:&quot;ON&quot;,&quot;PostCode&quot;:&quot;1234&quot;,&quot;CountryA2&quot;:&quot;AU&quot;,&quot;CountryA3&quot;:&quot;AUS&quot;,&quot;ClientIP&quot;:&quot;12.12.12.12&quot;,&quot;AdditionalInfo&quot;:{&quot;Locale&quot;:&quot;en_GB&quot;}},&quot;AdditionalInfo&quot;:{}}']" mimeType="application/json" doc:name="Set Request Payload"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Request Payload \n InstrumentId :'+payload.Instrument.InstrumentId + '\n Type:'+payload.Instrument.type+'\n SubType:'+payload.Instrument.SubType+'\n GatewayNonce:'+payload.Instrument.GatewayNonce+'\n GatewayToken:'+payload.Instrument.GatewayToken+'\n LegalEntity:'+payload.Instrument.LegalEntity+'\n Currency:'+payload.Instrument.Currency+'\n HolderName:'+payload.Instrument.HolderName+'\n Identifier:'+payload.Instrument.Identifier+'\n ExpiryDate:'+payload.Instrument.ExpiryDate+'\n TagName:'+payload.Instrument.TagName+'\n ClientId:'+payload.Client.ClientId+'\n ProfileId:'+payload.Client.ProfileId+'\n FirstName:'+payload.Client.FirstName+'\n MiddleName:'+payload.Client.MiddleName+'\n LastName:'+payload.Client.LastName+'\n DOB:'+payload.Client.DOB+'\n Email:'+payload.Client.Email+'\n Phone:'+payload.Client.Phone+'\n Mobile:'+payload.Client.Mobile+'\n Address:'+payload.Client.Address+'\n City:'+payload.Client.City+'\n State:'+payload.Client.State+'\n PostCode:'+payload.Client.PostCode+'\n CountryA2:'+payload.Client.CountryA2+'\n CountryA3:'+payload.Client.CountryA3+'\n ClientIP:'+payload.Client.ClientIP+'\n Locale:'+payload.Client.AdditionalInfo.Locale+'\n']" level="INFO" category="MUnit Test || instrumentFlow-TestCase3(SuccessScenarioforUpdateProfile&amp;Address)" doc:name="Request Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <flow-ref name="instrumentFlow" doc:name="Flow-ref to instrument Flow"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Response Payload \n InstrumentId : '+payload.Instrument.InstrumentId+'\n ProfileId : '+payload.Instrument.ProfileId+'\n GatewayToken : '+payload.Instrument.GatewayToken+'\n type : '+payload.Instrument.type+'\n SubType: '+payload.Instrument.SubType+'\n IsDebit:'+payload.Instrument.IsDebit+'\n HolderName:'+payload.Instrument.HolderName+'\n Identifier:'+payload.Instrument.Identifier+'\n ExpiryDate:'+payload.Instrument.ExpiryDate+'\n IssuedCountry:'+payload.Instrument.IssuedCountry+'\n AdditionalInfo:'+payload.Instrument.AdditionalInfo+'\n ClientId:'+payload.Client.ClientId+'\n AdditionalInfo:'+payload.Client.AdditionalInfo+'\n']" level="INFO" category="MUnit Test || instrumentFlow-TestCase3(SuccessScenarioforUpdateProfile&amp;Address)" doc:name="Response Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <munit:assert-on-equals message="Response message is not valid as expected" expectedValue="#['{&quot;Instrument&quot;:{&quot;InstrumentId&quot;:&quot;marchant-99944&quot;,&quot;ProfileId&quot;:&quot;aad6395c-1a68-483e-90ef-f1da1139d0b6&quot;,&quot;GatewayToken&quot;:&quot;CEMNzRhpUWtqHyL&quot;,&quot;GatewayResponseCode&quot;:&quot;&quot;,&quot;GatewayResponseMessage&quot;:&quot;&quot;,&quot;GatewayStatus&quot;:&quot;SUCCESS&quot;,&quot;type&quot;:&quot;Card account&quot;,&quot;SubType&quot;:&quot;Visa&quot;,&quot;IsDebit&quot;:&quot;&quot;,&quot;HolderName&quot;:&quot;Jogn T Smith&quot;,&quot;Identifier&quot;:&quot;0321&quot;,&quot;ExpiryDate&quot;:&quot;2020-11-30&quot;,&quot;IssuedCountry&quot;:&quot;&quot;,&quot;AdditionalInfo&quot;:{}},&quot;Client&quot;:{&quot;ClientId&quot;:&quot;marchant-99944&quot;,&quot;AdditionalInfo&quot;:{}}}']" actualValue="#[payload]" doc:name="Check Response Payload"/>
    </munit:test>    
    
    <munit:test name="InstrumentFlow-TestCase-4(SuccessScenarioforUpdateCardandAddress)" description="Verifying Instrument flow with test request for Update Card and Address success scenario." >
        <mock:when messageProcessor=".*:.*" doc:name="Mock Get Profile API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Get Profile API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;id&quot;:&quot;aad6395c-1a68-483e-90ef-f1da1139d0b6&quot;,&quot;status&quot;:&quot;ACTIVE&quot;,&quot;merchantCustomerId&quot;:&quot;marchant-99944&quot;,&quot;locale&quot;:&quot;en_GB&quot;,&quot;firstName&quot;:&quot;Jacob&quot;,&quot;middleName&quot;:&quot;Walls&quot;,&quot;lastName&quot;:&quot;Smith&quot;,&quot;dateOfBirth&quot;:{&quot;year&quot;:1980,&quot;month&quot;:11,&quot;day&quot;:11},&quot;ip&quot;:&quot;12.12.12.12&quot;,&quot;paymentToken&quot;:&quot;PEhTAGV4V43NRcx&quot;,&quot;phone&quot;:&quot;123456789&quot;,&quot;cellPhone&quot;:&quot;123456789&quot;,&quot;email&quot;:&quot;john.smith@test.com&quot;,&quot;addresses&quot;:[{&quot;id&quot;:&quot;8c18c9ef-1eb7-47eb-bf69-4b7d21c2320c&quot;,&quot;street&quot;:&quot;1 cannes test1&quot;,&quot;city&quot;:&quot;Somewhere&quot;,&quot;country&quot;:&quot;AU&quot;,&quot;state&quot;:&quot;ON&quot;,&quot;zip&quot;:&quot;1234&quot;,&quot;phone&quot;:&quot;123456789&quot;,&quot;defaultShippingAddressIndicator&quot;:false,&quot;status&quot;:&quot;ACTIVE&quot;}],&quot;cards&quot;:[{&quot;status&quot;:&quot;ACTIVE&quot;,&quot;id&quot;:&quot;fd54d65e-dea4-4a7c-8b03-e796b3d6f07c&quot;,&quot;cardBin&quot;:&quot;451015&quot;,&quot;lastDigits&quot;:&quot;0321&quot;,&quot;cardExpiry&quot;:{&quot;year&quot;:2020,&quot;month&quot;:11},&quot;holderName&quot;:&quot;Jogn T Smith&quot;,&quot;nickName&quot;:&quot;MyHSBCCard&quot;,&quot;merchantRefNum&quot;:&quot;marchant-99944&quot;,&quot;cardType&quot;:&quot;VI&quot;,&quot;paymentToken&quot;:&quot;CEMNzRhpUWtqHyL&quot;}]}']"/>
        </mock:when>
        <mock:when messageProcessor=".*:.*" doc:name="Mock Update Card API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Update Card API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;status&quot;:&quot;ACTIVE&quot;,&quot;id&quot;:&quot;fd54d65e-dea4-4a7c-8b03-e796b3d6f07c&quot;,&quot;cardBin&quot;:&quot;451015&quot;,&quot;lastDigits&quot;:&quot;0321&quot;,&quot;cardExpiry&quot;:{&quot;year&quot;:2045,&quot;month&quot;:11},&quot;holderName&quot;:&quot;Jogn T Smith&quot;,&quot;nickName&quot;:&quot;MyHSBCCard&quot;,&quot;merchantRefNum&quot;:&quot;marchant-99944&quot;,&quot;cardType&quot;:&quot;VI&quot;,&quot;paymentToken&quot;:&quot;CEMNzRhpUWtqHyL&quot;,&quot;defaultCardIndicator&quot;:true}']"/>
        </mock:when>
        <mock:when messageProcessor=".*:.*" doc:name="Mock Update Address API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Update Address API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;id&quot;:&quot;8c18c9ef-1eb7-47eb-bf69-4b7d21c2320c&quot;,&quot;street&quot;:&quot;12 Norway test1&quot;,&quot;city&quot;:&quot;Somewhere&quot;,&quot;country&quot;:&quot;AU&quot;,&quot;state&quot;:&quot;ON&quot;,&quot;zip&quot;:&quot;1234&quot;,&quot;phone&quot;:&quot;123456789&quot;,&quot;defaultShippingAddressIndicator&quot;:false,&quot;status&quot;:&quot;ACTIVE&quot;}']"/>
        </mock:when>
        <munit:set payload="#['{&quot;Instrument&quot;:{&quot;InstrumentId&quot;:&quot;marchant-99944&quot;,&quot;type&quot;:&quot;Card account&quot;,&quot;SubType&quot;:&quot;Visa&quot;,&quot;GatewayNonce&quot;:&quot;&quot;,&quot;GatewayToken&quot;:&quot;CEMNzRhpUWtqHyL&quot;,&quot;LegalEntity&quot;:&quot;Axicorp Limited&quot;,&quot;Currency&quot;:&quot;GBP&quot;,&quot;HolderName&quot;:&quot;Jogn T Smith&quot;,&quot;Identifier&quot;:&quot;0321&quot;,&quot;ExpiryDate&quot;:&quot;2045-11-30&quot;,&quot;TagName&quot;:&quot;MyHSBCCard&quot;,&quot;AdditionalInfo&quot;:{}},&quot;Client&quot;:{&quot;ClientId&quot;:&quot;marchant-99944&quot;,&quot;ProfileId&quot;:&quot;aad6395c-1a68-483e-90ef-f1da1139d0b6&quot;,&quot;FirstName&quot;:&quot;Jacob&quot;,&quot;MiddleName&quot;:&quot;Walls&quot;,&quot;LastName&quot;:&quot;Smith&quot;,&quot;DOB&quot;:&quot;1980-11-11&quot;,&quot;Email&quot;:&quot;john.smith@test.com&quot;,&quot;Phone&quot;:&quot;123456789&quot;,&quot;Mobile&quot;:&quot;123456789&quot;,&quot;Address&quot;:&quot;12 Norway test1&quot;,&quot;City&quot;:&quot;Somewhere&quot;,&quot;State&quot;:&quot;ON&quot;,&quot;PostCode&quot;:&quot;1234&quot;,&quot;CountryA2&quot;:&quot;AU&quot;,&quot;CountryA3&quot;:&quot;AUS&quot;,&quot;ClientIP&quot;:&quot;12.12.12.12&quot;,&quot;AdditionalInfo&quot;:{&quot;Locale&quot;:&quot;en_GB&quot;}},&quot;AdditionalInfo&quot;:{}}']" doc:name="Set Request Payload" mimeType="application/json"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Request Payload \n InstrumentId :'+payload.Instrument.InstrumentId + '\n Type:'+payload.Instrument.type+'\n SubType:'+payload.Instrument.SubType+'\n GatewayNonce:'+payload.Instrument.GatewayNonce+'\n GatewayToken:'+payload.Instrument.GatewayToken+'\n LegalEntity:'+payload.Instrument.LegalEntity+'\n Currency:'+payload.Instrument.Currency+'\n HolderName:'+payload.Instrument.HolderName+'\n Identifier:'+payload.Instrument.Identifier+'\n ExpiryDate:'+payload.Instrument.ExpiryDate+'\n TagName:'+payload.Instrument.TagName+'\n ClientId:'+payload.Client.ClientId+'\n ProfileId:'+payload.Client.ProfileId+'\n FirstName:'+payload.Client.FirstName+'\n MiddleName:'+payload.Client.MiddleName+'\n LastName:'+payload.Client.LastName+'\n DOB:'+payload.Client.DOB+'\n Email:'+payload.Client.Email+'\n Phone:'+payload.Client.Phone+'\n Mobile:'+payload.Client.Mobile+'\n Address:'+payload.Client.Address+'\n City:'+payload.Client.City+'\n State:'+payload.Client.State+'\n PostCode:'+payload.Client.PostCode+'\n CountryA2:'+payload.Client.CountryA2+'\n CountryA3:'+payload.Client.CountryA3+'\n ClientIP:'+payload.Client.ClientIP+'\n Locale:'+payload.Client.AdditionalInfo.Locale+'\n']" level="INFO" category="MUnit Test || instrumentFlow-TestCase4(SuccessScenarioforUpdateCard&amp;Address)" doc:name="Request Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <flow-ref name="instrumentFlow" doc:name="Flow-ref to instrument Flow"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Response Payload \n InstrumentId : '+payload.Instrument.InstrumentId+'\n ProfileId : '+payload.Instrument.ProfileId+'\n GatewayToken : '+payload.Instrument.GatewayToken+'\n type : '+payload.Instrument.type+'\n SubType: '+payload.Instrument.SubType+'\n IsDebit:'+payload.Instrument.IsDebit+'\n HolderName:'+payload.Instrument.HolderName+'\n Identifier:'+payload.Instrument.Identifier+'\n ExpiryDate:'+payload.Instrument.ExpiryDate+'\n IssuedCountry:'+payload.Instrument.IssuedCountry+'\n AdditionalInfo:'+payload.Instrument.AdditionalInfo+'\n ClientId:'+payload.Client.ClientId+'\n AdditionalInfo:'+payload.Client.AdditionalInfo+'\n']" level="INFO" category="MUnit Test || instrumentFlow-TestCase4(SuccessScenarioforUpdateCard&amp;Address)" doc:name="Response Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <munit:assert-on-equals expectedValue="#['{&quot;Instrument&quot;:{&quot;InstrumentId&quot;:&quot;marchant-99944&quot;,&quot;ProfileId&quot;:&quot;aad6395c-1a68-483e-90ef-f1da1139d0b6&quot;,&quot;GatewayToken&quot;:&quot;CEMNzRhpUWtqHyL&quot;,&quot;GatewayResponseCode&quot;:&quot;&quot;,&quot;GatewayResponseMessage&quot;:&quot;&quot;,&quot;GatewayStatus&quot;:&quot;SUCCESS&quot;,&quot;type&quot;:&quot;Card account&quot;,&quot;SubType&quot;:&quot;Visa&quot;,&quot;IsDebit&quot;:&quot;false&quot;,&quot;HolderName&quot;:&quot;Jogn T Smith&quot;,&quot;Identifier&quot;:&quot;0321&quot;,&quot;ExpiryDate&quot;:&quot;2045-11-30&quot;,&quot;IssuedCountry&quot;:&quot;&quot;,&quot;AdditionalInfo&quot;:{}},&quot;Client&quot;:{&quot;ClientId&quot;:&quot;marchant-99944&quot;,&quot;AdditionalInfo&quot;:{}}}']" actualValue="#[payload]" doc:name="Check Response Payload" message="Response message is not valid as expected"/>
    </munit:test>
    <munit:test name="InstrumentFlow-TestCase-5(SuccessScenarioforUpdateProfileOnly)" description="Verifying Instrument flow with test request for Update Profile only success scenario." >
        <mock:when messageProcessor=".*:.*" doc:name="Mock Get Profile API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Get Profile API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;id&quot;:&quot;aad6395c-1a68-483e-90ef-f1da1139d0b6&quot;,&quot;status&quot;:&quot;ACTIVE&quot;,&quot;merchantCustomerId&quot;:&quot;marchant-99944&quot;,&quot;locale&quot;:&quot;en_GB&quot;,&quot;firstName&quot;:&quot;John&quot;,&quot;lastName&quot;:&quot;Smith&quot;,&quot;dateOfBirth&quot;:{&quot;year&quot;:1980,&quot;month&quot;:11,&quot;day&quot;:11},&quot;ip&quot;:&quot;12.12.12.12&quot;,&quot;paymentToken&quot;:&quot;PEhTAGV4V43NRcx&quot;,&quot;phone&quot;:&quot;123456789&quot;,&quot;cellPhone&quot;:&quot;123456789&quot;,&quot;email&quot;:&quot;john.smith@test.com&quot;,&quot;addresses&quot;:[{&quot;id&quot;:&quot;8c18c9ef-1eb7-47eb-bf69-4b7d21c2320c&quot;,&quot;street&quot;:&quot;1 Some test&quot;,&quot;city&quot;:&quot;Somewhere&quot;,&quot;country&quot;:&quot;AU&quot;,&quot;state&quot;:&quot;ON&quot;,&quot;zip&quot;:&quot;1234&quot;,&quot;phone&quot;:&quot;123456789&quot;,&quot;defaultShippingAddressIndicator&quot;:false,&quot;status&quot;:&quot;ACTIVE&quot;}],&quot;cards&quot;:[{&quot;status&quot;:&quot;ACTIVE&quot;,&quot;id&quot;:&quot;fd54d65e-dea4-4a7c-8b03-e796b3d6f07c&quot;,&quot;cardBin&quot;:&quot;451015&quot;,&quot;lastDigits&quot;:&quot;0321&quot;,&quot;cardExpiry&quot;:{&quot;year&quot;:2020,&quot;month&quot;:11},&quot;holderName&quot;:&quot;NJogn T Smith&quot;,&quot;nickName&quot;:&quot;MyHSBCCard&quot;,&quot;merchantRefNum&quot;:&quot;marchant-99944&quot;,&quot;cardType&quot;:&quot;VI&quot;,&quot;paymentToken&quot;:&quot;CEMNzRhpUWtqHyL&quot;}]}']"/>
        </mock:when>
        <mock:when messageProcessor=".*:.*" doc:name="Mock Update Profile API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Update Profile API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;id&quot;:&quot;aad6395c-1a68-483e-90ef-f1da1139d0b6&quot;,&quot;status&quot;:&quot;ACTIVE&quot;,&quot;merchantCustomerId&quot;:&quot;marchant-99944&quot;,&quot;locale&quot;:&quot;en_GB&quot;,&quot;firstName&quot;:&quot;James&quot;,&quot;middleName&quot;:&quot;Walls&quot;,&quot;lastName&quot;:&quot;Smith&quot;,&quot;dateOfBirth&quot;:{&quot;year&quot;:1980,&quot;month&quot;:11,&quot;day&quot;:11},&quot;ip&quot;:&quot;12.12.12.12&quot;,&quot;paymentToken&quot;:&quot;PEhTAGV4V43NRcx&quot;,&quot;phone&quot;:&quot;123456789&quot;,&quot;cellPhone&quot;:&quot;123456789&quot;,&quot;email&quot;:&quot;john.smith@test.com&quot;}']"/>
        </mock:when>
        <munit:set payload="#['{&quot;Instrument&quot;:{&quot;InstrumentId&quot;:&quot;marchant-99944&quot;,&quot;type&quot;:&quot;Card account&quot;,&quot;SubType&quot;:&quot;Visa&quot;,&quot;GatewayNonce&quot;:&quot;&quot;,&quot;GatewayToken&quot;:&quot;CEMNzRhpUWtqHyL&quot;,&quot;LegalEntity&quot;:&quot;Axicorp Limited&quot;,&quot;Currency&quot;:&quot;GBP&quot;,&quot;HolderName&quot;:&quot;NJogn T Smith&quot;,&quot;Identifier&quot;:&quot;0321&quot;,&quot;ExpiryDate&quot;:&quot;2020-11-30&quot;,&quot;TagName&quot;:&quot;MyHSBCCard&quot;,&quot;AdditionalInfo&quot;:{}},&quot;Client&quot;:{&quot;ClientId&quot;:&quot;marchant-99944&quot;,&quot;ProfileId&quot;:&quot;aad6395c-1a68-483e-90ef-f1da1139d0b6&quot;,&quot;FirstName&quot;:&quot;James&quot;,&quot;MiddleName&quot;:&quot;Walls&quot;,&quot;LastName&quot;:&quot;Smith&quot;,&quot;DOB&quot;:&quot;1980-11-11&quot;,&quot;Email&quot;:&quot;john.smith@test.com&quot;,&quot;Phone&quot;:&quot;123456789&quot;,&quot;Mobile&quot;:&quot;123456789&quot;,&quot;Address&quot;:&quot;1 Some test&quot;,&quot;City&quot;:&quot;Somewhere&quot;,&quot;State&quot;:&quot;ON&quot;,&quot;PostCode&quot;:&quot;1234&quot;,&quot;CountryA2&quot;:&quot;AU&quot;,&quot;CountryA3&quot;:&quot;AUS&quot;,&quot;ClientIP&quot;:&quot;12.12.12.12&quot;,&quot;AdditionalInfo&quot;:{&quot;Locale&quot;:&quot;en_GB&quot;}},&quot;AdditionalInfo&quot;:{}}']" doc:name="Set Request Payload" mimeType="application/json"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Request Payload \n InstrumentId :'+payload.Instrument.InstrumentId + '\n Type:'+payload.Instrument.type+'\n SubType:'+payload.Instrument.SubType+'\n GatewayNonce:'+payload.Instrument.GatewayNonce+'\n GatewayToken:'+payload.Instrument.GatewayToken+'\n LegalEntity:'+payload.Instrument.LegalEntity+'\n Currency:'+payload.Instrument.Currency+'\n HolderName:'+payload.Instrument.HolderName+'\n Identifier:'+payload.Instrument.Identifier+'\n ExpiryDate:'+payload.Instrument.ExpiryDate+'\n TagName:'+payload.Instrument.TagName+'\n ClientId:'+payload.Client.ClientId+'\n ProfileId:'+payload.Client.ProfileId+'\n FirstName:'+payload.Client.FirstName+'\n MiddleName:'+payload.Client.MiddleName+'\n LastName:'+payload.Client.LastName+'\n DOB:'+payload.Client.DOB+'\n Email:'+payload.Client.Email+'\n Phone:'+payload.Client.Phone+'\n Mobile:'+payload.Client.Mobile+'\n Address:'+payload.Client.Address+'\n City:'+payload.Client.City+'\n State:'+payload.Client.State+'\n PostCode:'+payload.Client.PostCode+'\n CountryA2:'+payload.Client.CountryA2+'\n CountryA3:'+payload.Client.CountryA3+'\n ClientIP:'+payload.Client.ClientIP+'\n Locale:'+payload.Client.AdditionalInfo.Locale+'\n']" level="INFO" category="MUnit Test || instrumentFlow-TestCase5(SuccessScenarioforUpdateAllThree)" doc:name="Request Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <flow-ref name="instrumentFlow" doc:name="Flow-ref to instrument Flow"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Response Payload \n InstrumentId : '+payload.Instrument.InstrumentId+'\n ProfileId : '+payload.Instrument.ProfileId+'\n GatewayToken : '+payload.Instrument.GatewayToken+'\n type : '+payload.Instrument.type+'\n SubType: '+payload.Instrument.SubType+'\n IsDebit:'+payload.Instrument.IsDebit+'\n HolderName:'+payload.Instrument.HolderName+'\n Identifier:'+payload.Instrument.Identifier+'\n ExpiryDate:'+payload.Instrument.ExpiryDate+'\n IssuedCountry:'+payload.Instrument.IssuedCountry+'\n AdditionalInfo:'+payload.Instrument.AdditionalInfo+'\n ClientId:'+payload.Client.ClientId+'\n AdditionalInfo:'+payload.Client.AdditionalInfo+'\n']" level="INFO" category="MUnit Test || instrumentFlow-TestCase5(SuccessScenarioforUpdateAllThree)" doc:name="Response Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <munit:assert-on-equals expectedValue="#['{&quot;Instrument&quot;:{&quot;InstrumentId&quot;:&quot;marchant-99944&quot;,&quot;ProfileId&quot;:&quot;aad6395c-1a68-483e-90ef-f1da1139d0b6&quot;,&quot;GatewayToken&quot;:&quot;CEMNzRhpUWtqHyL&quot;,&quot;GatewayResponseCode&quot;:&quot;&quot;,&quot;GatewayResponseMessage&quot;:&quot;&quot;,&quot;GatewayStatus&quot;:&quot;SUCCESS&quot;,&quot;type&quot;:&quot;Card account&quot;,&quot;SubType&quot;:&quot;Visa&quot;,&quot;IsDebit&quot;:&quot;&quot;,&quot;HolderName&quot;:&quot;NJogn T Smith&quot;,&quot;Identifier&quot;:&quot;0321&quot;,&quot;ExpiryDate&quot;:&quot;2020-11-30&quot;,&quot;IssuedCountry&quot;:&quot;&quot;,&quot;AdditionalInfo&quot;:{}},&quot;Client&quot;:{&quot;ClientId&quot;:&quot;marchant-99944&quot;,&quot;AdditionalInfo&quot;:{}}}']" actualValue="#[payload]" doc:name="Check Response Payload" message="Response message is not valid as expected"/>
    </munit:test>
    <munit:test name="InstrumentFlow-TestCase-6(SuccessScenarioforUpdateCardOnly)" description="Verifying Instrument flow with test request for Update Card only success scenario." >
        <mock:when messageProcessor=".*:.*" doc:name="Mock Get Profile API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Get Profile API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;id&quot;:&quot;aad6395c-1a68-483e-90ef-f1da1139d0b6&quot;,&quot;status&quot;:&quot;ACTIVE&quot;,&quot;merchantCustomerId&quot;:&quot;marchant-99944&quot;,&quot;locale&quot;:&quot;en_GB&quot;,&quot;firstName&quot;:&quot;James&quot;,&quot;middleName&quot;:&quot;Walls&quot;,&quot;lastName&quot;:&quot;Smith&quot;,&quot;dateOfBirth&quot;:{&quot;year&quot;:1980,&quot;month&quot;:11,&quot;day&quot;:11},&quot;ip&quot;:&quot;12.12.12.12&quot;,&quot;paymentToken&quot;:&quot;PEhTAGV4V43NRcx&quot;,&quot;phone&quot;:&quot;123456789&quot;,&quot;cellPhone&quot;:&quot;123456789&quot;,&quot;email&quot;:&quot;john.smith@test.com&quot;,&quot;addresses&quot;:[{&quot;id&quot;:&quot;8c18c9ef-1eb7-47eb-bf69-4b7d21c2320c&quot;,&quot;street&quot;:&quot;11 Clock tower&quot;,&quot;city&quot;:&quot;Sydney&quot;,&quot;country&quot;:&quot;AU&quot;,&quot;state&quot;:&quot;ON&quot;,&quot;zip&quot;:&quot;1234&quot;,&quot;phone&quot;:&quot;123456789&quot;,&quot;defaultShippingAddressIndicator&quot;:false,&quot;status&quot;:&quot;ACTIVE&quot;}],&quot;cards&quot;:[{&quot;status&quot;:&quot;ACTIVE&quot;,&quot;id&quot;:&quot;fd54d65e-dea4-4a7c-8b03-e796b3d6f07c&quot;,&quot;cardBin&quot;:&quot;451015&quot;,&quot;lastDigits&quot;:&quot;0321&quot;,&quot;cardExpiry&quot;:{&quot;year&quot;:2026,&quot;month&quot;:11},&quot;holderName&quot;:&quot;NJogn T Smith&quot;,&quot;nickName&quot;:&quot;MyHSBCCard&quot;,&quot;merchantRefNum&quot;:&quot;marchant-99944&quot;,&quot;cardType&quot;:&quot;VI&quot;,&quot;paymentToken&quot;:&quot;CEMNzRhpUWtqHyL&quot;,&quot;defaultCardIndicator&quot;:true}]}']"/>
        </mock:when>
        <mock:when messageProcessor=".*:.*" doc:name="Mock Update Card API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Update Card API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;status&quot;:&quot;ACTIVE&quot;,&quot;id&quot;:&quot;fd54d65e-dea4-4a7c-8b03-e796b3d6f07c&quot;,&quot;cardBin&quot;:&quot;451015&quot;,&quot;lastDigits&quot;:&quot;0321&quot;,&quot;cardExpiry&quot;:{&quot;year&quot;:2025,&quot;month&quot;:11},&quot;holderName&quot;:&quot;NJogn T Smith&quot;,&quot;nickName&quot;:&quot;MyHSBCCard&quot;,&quot;merchantRefNum&quot;:&quot;marchant-99944&quot;,&quot;cardType&quot;:&quot;VI&quot;,&quot;paymentToken&quot;:&quot;CEMNzRhpUWtqHyL&quot;,&quot;defaultCardIndicator&quot;:true}']"/>
        </mock:when>
        <munit:set payload="#['{&quot;Instrument&quot;:{&quot;InstrumentId&quot;:&quot;marchant-99944&quot;,&quot;type&quot;:&quot;Card account&quot;,&quot;SubType&quot;:&quot;Visa&quot;,&quot;GatewayNonce&quot;:&quot;&quot;,&quot;GatewayToken&quot;:&quot;CEMNzRhpUWtqHyL&quot;,&quot;LegalEntity&quot;:&quot;Axicorp Limited&quot;,&quot;Currency&quot;:&quot;GBP&quot;,&quot;HolderName&quot;:&quot;NJogn T Smith&quot;,&quot;Identifier&quot;:&quot;0321&quot;,&quot;ExpiryDate&quot;:&quot;2025-11-30&quot;,&quot;TagName&quot;:&quot;MyHSBCCard&quot;,&quot;AdditionalInfo&quot;:{}},&quot;Client&quot;:{&quot;ClientId&quot;:&quot;marchant-99944&quot;,&quot;ProfileId&quot;:&quot;aad6395c-1a68-483e-90ef-f1da1139d0b6&quot;,&quot;FirstName&quot;:&quot;James&quot;,&quot;MiddleName&quot;:&quot;Walls&quot;,&quot;LastName&quot;:&quot;Smith&quot;,&quot;DOB&quot;:&quot;1980-11-11&quot;,&quot;Email&quot;:&quot;john.smith@test.com&quot;,&quot;Phone&quot;:&quot;123456789&quot;,&quot;Mobile&quot;:&quot;123456789&quot;,&quot;Address&quot;:&quot;11 Clock tower&quot;,&quot;City&quot;:&quot;Sydney&quot;,&quot;State&quot;:&quot;ON&quot;,&quot;PostCode&quot;:&quot;1234&quot;,&quot;CountryA2&quot;:&quot;AU&quot;,&quot;CountryA3&quot;:&quot;AUS&quot;,&quot;ClientIP&quot;:&quot;12.12.12.12&quot;,&quot;AdditionalInfo&quot;:{&quot;Locale&quot;:&quot;en_GB&quot;}},&quot;AdditionalInfo&quot;:{}}']" doc:name="Set Request Payload" mimeType="application/json"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Request Payload \n InstrumentId :'+payload.Instrument.InstrumentId + '\n Type:'+payload.Instrument.type+'\n SubType:'+payload.Instrument.SubType+'\n GatewayNonce:'+payload.Instrument.GatewayNonce+'\n GatewayToken:'+payload.Instrument.GatewayToken+'\n LegalEntity:'+payload.Instrument.LegalEntity+'\n Currency:'+payload.Instrument.Currency+'\n HolderName:'+payload.Instrument.HolderName+'\n Identifier:'+payload.Instrument.Identifier+'\n ExpiryDate:'+payload.Instrument.ExpiryDate+'\n TagName:'+payload.Instrument.TagName+'\n ClientId:'+payload.Client.ClientId+'\n ProfileId:'+payload.Client.ProfileId+'\n FirstName:'+payload.Client.FirstName+'\n MiddleName:'+payload.Client.MiddleName+'\n LastName:'+payload.Client.LastName+'\n DOB:'+payload.Client.DOB+'\n Email:'+payload.Client.Email+'\n Phone:'+payload.Client.Phone+'\n Mobile:'+payload.Client.Mobile+'\n Address:'+payload.Client.Address+'\n City:'+payload.Client.City+'\n State:'+payload.Client.State+'\n PostCode:'+payload.Client.PostCode+'\n CountryA2:'+payload.Client.CountryA2+'\n CountryA3:'+payload.Client.CountryA3+'\n ClientIP:'+payload.Client.ClientIP+'\n Locale:'+payload.Client.AdditionalInfo.Locale+'\n']" level="INFO" category="MUnit Test || instrumentFlow-TestCase6(SuccessScenarioforUpdateCardOnly)" doc:name="Request Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <flow-ref name="instrumentFlow" doc:name="Flow-ref to instrument Flow"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Response Payload \n InstrumentId : '+payload.Instrument.InstrumentId+'\n ProfileId : '+payload.Instrument.ProfileId+'\n GatewayToken : '+payload.Instrument.GatewayToken+'\n type : '+payload.Instrument.type+'\n SubType: '+payload.Instrument.SubType+'\n IsDebit:'+payload.Instrument.IsDebit+'\n HolderName:'+payload.Instrument.HolderName+'\n Identifier:'+payload.Instrument.Identifier+'\n ExpiryDate:'+payload.Instrument.ExpiryDate+'\n IssuedCountry:'+payload.Instrument.IssuedCountry+'\n AdditionalInfo:'+payload.Instrument.AdditionalInfo+'\n ClientId:'+payload.Client.ClientId+'\n AdditionalInfo:'+payload.Client.AdditionalInfo+'\n']" level="INFO" category="MUnit Test || instrumentFlow-TestCase6(SuccessScenarioforUpdateCardOnly)" doc:name="Response Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <munit:assert-on-equals expectedValue="#['{&quot;Instrument&quot;:{&quot;InstrumentId&quot;:&quot;marchant-99944&quot;,&quot;ProfileId&quot;:&quot;aad6395c-1a68-483e-90ef-f1da1139d0b6&quot;,&quot;GatewayToken&quot;:&quot;CEMNzRhpUWtqHyL&quot;,&quot;GatewayResponseCode&quot;:&quot;&quot;,&quot;GatewayResponseMessage&quot;:&quot;&quot;,&quot;GatewayStatus&quot;:&quot;SUCCESS&quot;,&quot;type&quot;:&quot;Card account&quot;,&quot;SubType&quot;:&quot;Visa&quot;,&quot;IsDebit&quot;:&quot;false&quot;,&quot;HolderName&quot;:&quot;NJogn T Smith&quot;,&quot;Identifier&quot;:&quot;0321&quot;,&quot;ExpiryDate&quot;:&quot;2025-11-30&quot;,&quot;IssuedCountry&quot;:&quot;&quot;,&quot;AdditionalInfo&quot;:{}},&quot;Client&quot;:{&quot;ClientId&quot;:&quot;marchant-99944&quot;,&quot;AdditionalInfo&quot;:{}}}']" actualValue="#[payload]" doc:name="Check Response Payload" message="Response message is not valid as expected"/>
    </munit:test>
    <munit:test name="InstrumentFlow-TestCase-7(SuccessScenarioforUpdateAddressOnly)" description="Verifying Instrument flow with test request for Update Address only success scenario." >
        <mock:when messageProcessor=".*:.*" doc:name="Mock Get Profile API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Get Profile API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;id&quot;:&quot;aad6395c-1a68-483e-90ef-f1da1139d0b6&quot;,&quot;status&quot;:&quot;ACTIVE&quot;,&quot;merchantCustomerId&quot;:&quot;marchant-99944&quot;,&quot;locale&quot;:&quot;en_GB&quot;,&quot;firstName&quot;:&quot;James&quot;,&quot;middleName&quot;:&quot;Walls&quot;,&quot;lastName&quot;:&quot;Smith&quot;,&quot;dateOfBirth&quot;:{&quot;year&quot;:1980,&quot;month&quot;:11,&quot;day&quot;:11},&quot;ip&quot;:&quot;12.12.12.12&quot;,&quot;paymentToken&quot;:&quot;PEhTAGV4V43NRcx&quot;,&quot;phone&quot;:&quot;123456789&quot;,&quot;cellPhone&quot;:&quot;123456789&quot;,&quot;email&quot;:&quot;john.smith@test.com&quot;,&quot;addresses&quot;:[{&quot;id&quot;:&quot;8c18c9ef-1eb7-47eb-bf69-4b7d21c2320c&quot;,&quot;street&quot;:&quot;1 Some test&quot;,&quot;city&quot;:&quot;Somewhere&quot;,&quot;country&quot;:&quot;AU&quot;,&quot;state&quot;:&quot;ON&quot;,&quot;zip&quot;:&quot;1234&quot;,&quot;phone&quot;:&quot;123456789&quot;,&quot;defaultShippingAddressIndicator&quot;:false,&quot;status&quot;:&quot;ACTIVE&quot;}],&quot;cards&quot;:[{&quot;status&quot;:&quot;ACTIVE&quot;,&quot;id&quot;:&quot;fd54d65e-dea4-4a7c-8b03-e796b3d6f07c&quot;,&quot;cardBin&quot;:&quot;451015&quot;,&quot;lastDigits&quot;:&quot;0321&quot;,&quot;cardExpiry&quot;:{&quot;year&quot;:2020,&quot;month&quot;:11},&quot;holderName&quot;:&quot;NJogn T Smith&quot;,&quot;nickName&quot;:&quot;MyHSBCCard&quot;,&quot;merchantRefNum&quot;:&quot;marchant-99944&quot;,&quot;cardType&quot;:&quot;VI&quot;,&quot;paymentToken&quot;:&quot;CEMNzRhpUWtqHyL&quot;}]}']"/>
        </mock:when>
        <mock:when messageProcessor=".*:.*" doc:name="Mock Update Address API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Update Address API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;id&quot;:&quot;8c18c9ef-1eb7-47eb-bf69-4b7d21c2320c&quot;,&quot;street&quot;:&quot;11 Clock tower&quot;,&quot;city&quot;:&quot;Sydney&quot;,&quot;country&quot;:&quot;AU&quot;,&quot;state&quot;:&quot;ON&quot;,&quot;zip&quot;:&quot;1234&quot;,&quot;phone&quot;:&quot;123456789&quot;,&quot;defaultShippingAddressIndicator&quot;:false,&quot;status&quot;:&quot;ACTIVE&quot;}']"/>
        </mock:when>
        <munit:set payload="#['{&quot;Instrument&quot;:{&quot;InstrumentId&quot;:&quot;marchant-99944&quot;,&quot;type&quot;:&quot;Card account&quot;,&quot;SubType&quot;:&quot;Visa&quot;,&quot;GatewayNonce&quot;:&quot;&quot;,&quot;GatewayToken&quot;:&quot;CEMNzRhpUWtqHyL&quot;,&quot;LegalEntity&quot;:&quot;Axicorp Limited&quot;,&quot;Currency&quot;:&quot;GBP&quot;,&quot;HolderName&quot;:&quot;NJogn T Smith&quot;,&quot;Identifier&quot;:&quot;0321&quot;,&quot;ExpiryDate&quot;:&quot;2020-11-30&quot;,&quot;TagName&quot;:&quot;MyHSBCCard&quot;,&quot;AdditionalInfo&quot;:{}},&quot;Client&quot;:{&quot;ClientId&quot;:&quot;marchant-99944&quot;,&quot;ProfileId&quot;:&quot;aad6395c-1a68-483e-90ef-f1da1139d0b6&quot;,&quot;FirstName&quot;:&quot;James&quot;,&quot;MiddleName&quot;:&quot;Walls&quot;,&quot;LastName&quot;:&quot;Smith&quot;,&quot;DOB&quot;:&quot;1980-11-11&quot;,&quot;Email&quot;:&quot;john.smith@test.com&quot;,&quot;Phone&quot;:&quot;123456789&quot;,&quot;Mobile&quot;:&quot;123456789&quot;,&quot;Address&quot;:&quot;11 Clock tower&quot;,&quot;City&quot;:&quot;Sydney&quot;,&quot;State&quot;:&quot;ON&quot;,&quot;PostCode&quot;:&quot;1234&quot;,&quot;CountryA2&quot;:&quot;AU&quot;,&quot;CountryA3&quot;:&quot;AUS&quot;,&quot;ClientIP&quot;:&quot;12.12.12.12&quot;,&quot;AdditionalInfo&quot;:{&quot;Locale&quot;:&quot;en_GB&quot;}},&quot;AdditionalInfo&quot;:{}}']" doc:name="Set Request Payload" mimeType="application/json"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Request Payload \n InstrumentId :'+payload.Instrument.InstrumentId + '\n Type:'+payload.Instrument.type+'\n SubType:'+payload.Instrument.SubType+'\n GatewayNonce:'+payload.Instrument.GatewayNonce+'\n GatewayToken:'+payload.Instrument.GatewayToken+'\n LegalEntity:'+payload.Instrument.LegalEntity+'\n Currency:'+payload.Instrument.Currency+'\n HolderName:'+payload.Instrument.HolderName+'\n Identifier:'+payload.Instrument.Identifier+'\n ExpiryDate:'+payload.Instrument.ExpiryDate+'\n TagName:'+payload.Instrument.TagName+'\n ClientId:'+payload.Client.ClientId+'\n ProfileId:'+payload.Client.ProfileId+'\n FirstName:'+payload.Client.FirstName+'\n MiddleName:'+payload.Client.MiddleName+'\n LastName:'+payload.Client.LastName+'\n DOB:'+payload.Client.DOB+'\n Email:'+payload.Client.Email+'\n Phone:'+payload.Client.Phone+'\n Mobile:'+payload.Client.Mobile+'\n Address:'+payload.Client.Address+'\n City:'+payload.Client.City+'\n State:'+payload.Client.State+'\n PostCode:'+payload.Client.PostCode+'\n CountryA2:'+payload.Client.CountryA2+'\n CountryA3:'+payload.Client.CountryA3+'\n ClientIP:'+payload.Client.ClientIP+'\n Locale:'+payload.Client.AdditionalInfo.Locale+'\n']" level="INFO" category="MUnit Test || instrumentFlow-TestCase7(SuccessScenarioforUpdateAddressOnly)" doc:name="Request Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <flow-ref name="instrumentFlow" doc:name="Flow-ref to instrument Flow"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Response Payload \n InstrumentId : '+payload.Instrument.InstrumentId+'\n ProfileId : '+payload.Instrument.ProfileId+'\n GatewayToken : '+payload.Instrument.GatewayToken+'\n type : '+payload.Instrument.type+'\n SubType: '+payload.Instrument.SubType+'\n IsDebit:'+payload.Instrument.IsDebit+'\n HolderName:'+payload.Instrument.HolderName+'\n Identifier:'+payload.Instrument.Identifier+'\n ExpiryDate:'+payload.Instrument.ExpiryDate+'\n IssuedCountry:'+payload.Instrument.IssuedCountry+'\n AdditionalInfo:'+payload.Instrument.AdditionalInfo+'\n ClientId:'+payload.Client.ClientId+'\n AdditionalInfo:'+payload.Client.AdditionalInfo+'\n']" level="INFO" category="MUnit Test || instrumentFlow-TestCase7(SuccessScenarioforUpdateAddressOnly)" doc:name="Response Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <munit:assert-on-equals expectedValue="#['{&quot;Instrument&quot;:{&quot;InstrumentId&quot;:&quot;marchant-99944&quot;,&quot;ProfileId&quot;:&quot;aad6395c-1a68-483e-90ef-f1da1139d0b6&quot;,&quot;GatewayToken&quot;:&quot;CEMNzRhpUWtqHyL&quot;,&quot;GatewayResponseCode&quot;:&quot;&quot;,&quot;GatewayResponseMessage&quot;:&quot;&quot;,&quot;GatewayStatus&quot;:&quot;SUCCESS&quot;,&quot;type&quot;:&quot;Card account&quot;,&quot;SubType&quot;:&quot;Visa&quot;,&quot;IsDebit&quot;:&quot;&quot;,&quot;HolderName&quot;:&quot;NJogn T Smith&quot;,&quot;Identifier&quot;:&quot;0321&quot;,&quot;ExpiryDate&quot;:&quot;2020-11-30&quot;,&quot;IssuedCountry&quot;:&quot;&quot;,&quot;AdditionalInfo&quot;:{}},&quot;Client&quot;:{&quot;ClientId&quot;:&quot;marchant-99944&quot;,&quot;AdditionalInfo&quot;:{}}}']" actualValue="#[payload]" doc:name="Check Response Payload" message="Response message is not valid as expected"/>
    </munit:test>
    <munit:test name="InstrumentFlow-TestCase-8(SuccessScenarioforNoUpdateRequired)" description="Verifying Instrument flow with test request for No Updation Required success scenario." >
        <mock:when messageProcessor=".*:.*" doc:name="Mock Get Profile API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Get Profile API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;id&quot;:&quot;aad6395c-1a68-483e-90ef-f1da1139d0b6&quot;,&quot;status&quot;:&quot;ACTIVE&quot;,&quot;merchantCustomerId&quot;:&quot;marchant-99944&quot;,&quot;locale&quot;:&quot;en_GB&quot;,&quot;firstName&quot;:&quot;Jacob&quot;,&quot;middleName&quot;:&quot;Walls&quot;,&quot;lastName&quot;:&quot;Smith&quot;,&quot;dateOfBirth&quot;:{&quot;year&quot;:1980,&quot;month&quot;:11,&quot;day&quot;:11},&quot;ip&quot;:&quot;12.12.12.12&quot;,&quot;paymentToken&quot;:&quot;PEhTAGV4V43NRcx&quot;,&quot;phone&quot;:&quot;123456789&quot;,&quot;cellPhone&quot;:&quot;123456789&quot;,&quot;email&quot;:&quot;john.smith@test.com&quot;,&quot;addresses&quot;:[{&quot;id&quot;:&quot;8c18c9ef-1eb7-47eb-bf69-4b7d21c2320c&quot;,&quot;street&quot;:&quot;12 Norway test1&quot;,&quot;city&quot;:&quot;Somewhere&quot;,&quot;country&quot;:&quot;AU&quot;,&quot;state&quot;:&quot;ON&quot;,&quot;zip&quot;:&quot;1234&quot;,&quot;phone&quot;:&quot;123456789&quot;,&quot;defaultShippingAddressIndicator&quot;:false,&quot;status&quot;:&quot;ACTIVE&quot;}],&quot;cards&quot;:[{&quot;status&quot;:&quot;ACTIVE&quot;,&quot;id&quot;:&quot;fd54d65e-dea4-4a7c-8b03-e796b3d6f07c&quot;,&quot;cardBin&quot;:&quot;451015&quot;,&quot;lastDigits&quot;:&quot;0321&quot;,&quot;cardExpiry&quot;:{&quot;year&quot;:2045,&quot;month&quot;:11},&quot;holderName&quot;:&quot;Jogn T Smith&quot;,&quot;nickName&quot;:&quot;MyHSBCCard&quot;,&quot;merchantRefNum&quot;:&quot;marchant-99944&quot;,&quot;cardType&quot;:&quot;VI&quot;,&quot;paymentToken&quot;:&quot;CEMNzRhpUWtqHyL&quot;,&quot;defaultCardIndicator&quot;:true}]}']"/>
        </mock:when>
        <munit:set payload="#['{&quot;Instrument&quot;:{&quot;InstrumentId&quot;:&quot;marchant-99944&quot;,&quot;type&quot;:&quot;Card account&quot;,&quot;SubType&quot;:&quot;Visa&quot;,&quot;GatewayNonce&quot;:&quot;&quot;,&quot;GatewayToken&quot;:&quot;CEMNzRhpUWtqHyL&quot;,&quot;LegalEntity&quot;:&quot;Axicorp Limited&quot;,&quot;Currency&quot;:&quot;GBP&quot;,&quot;HolderName&quot;:&quot;Jogn T Smith&quot;,&quot;Identifier&quot;:&quot;0321&quot;,&quot;ExpiryDate&quot;:&quot;2045-11-30&quot;,&quot;TagName&quot;:&quot;MyHSBCCard&quot;,&quot;AdditionalInfo&quot;:{}},&quot;Client&quot;:{&quot;ClientId&quot;:&quot;marchant-99944&quot;,&quot;ProfileId&quot;:&quot;aad6395c-1a68-483e-90ef-f1da1139d0b6&quot;,&quot;FirstName&quot;:&quot;Jacob&quot;,&quot;MiddleName&quot;:&quot;Walls&quot;,&quot;LastName&quot;:&quot;Smith&quot;,&quot;DOB&quot;:&quot;1980-11-11&quot;,&quot;Email&quot;:&quot;john.smith@test.com&quot;,&quot;Phone&quot;:&quot;123456789&quot;,&quot;Mobile&quot;:&quot;123456789&quot;,&quot;Address&quot;:&quot;12 Norway test1&quot;,&quot;City&quot;:&quot;Somewhere&quot;,&quot;State&quot;:&quot;ON&quot;,&quot;PostCode&quot;:&quot;1234&quot;,&quot;CountryA2&quot;:&quot;AU&quot;,&quot;CountryA3&quot;:&quot;AUS&quot;,&quot;ClientIP&quot;:&quot;12.12.12.12&quot;,&quot;AdditionalInfo&quot;:{&quot;Locale&quot;:&quot;en_GB&quot;}},&quot;AdditionalInfo&quot;:{}}']" doc:name="Set Request Payload" mimeType="application/json"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Request Payload \n InstrumentId :'+payload.Instrument.InstrumentId + '\n Type:'+payload.Instrument.type+'\n SubType:'+payload.Instrument.SubType+'\n GatewayNonce:'+payload.Instrument.GatewayNonce+'\n GatewayToken:'+payload.Instrument.GatewayToken+'\n LegalEntity:'+payload.Instrument.LegalEntity+'\n Currency:'+payload.Instrument.Currency+'\n HolderName:'+payload.Instrument.HolderName+'\n Identifier:'+payload.Instrument.Identifier+'\n ExpiryDate:'+payload.Instrument.ExpiryDate+'\n TagName:'+payload.Instrument.TagName+'\n ClientId:'+payload.Client.ClientId+'\n ProfileId:'+payload.Client.ProfileId+'\n FirstName:'+payload.Client.FirstName+'\n MiddleName:'+payload.Client.MiddleName+'\n LastName:'+payload.Client.LastName+'\n DOB:'+payload.Client.DOB+'\n Email:'+payload.Client.Email+'\n Phone:'+payload.Client.Phone+'\n Mobile:'+payload.Client.Mobile+'\n Address:'+payload.Client.Address+'\n City:'+payload.Client.City+'\n State:'+payload.Client.State+'\n PostCode:'+payload.Client.PostCode+'\n CountryA2:'+payload.Client.CountryA2+'\n CountryA3:'+payload.Client.CountryA3+'\n ClientIP:'+payload.Client.ClientIP+'\n Locale:'+payload.Client.AdditionalInfo.Locale+'\n']" level="INFO" category="MUnit Test || instrumentFlow-TestCase8(SuccessScenarioforNoUpdateRequired)" doc:name="Request Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <flow-ref name="instrumentFlow" doc:name="Flow-ref to instrument Flow"/>
        <logger message="#['Response Payload \n&quot;updateStatus&quot;: &quot;Not Required&quot; ']" level="INFO" category="MUnit Test || instrumentFlow-TestCase8(SuccessScenarioforNoUpdateRequired)" doc:name="Response Payload"/>
        <munit:assert-on-equals expectedValue="#['{&quot;Instrument&quot;:{&quot;InstrumentId&quot;:&quot;marchant-99944&quot;,&quot;ProfileId&quot;:&quot;aad6395c-1a68-483e-90ef-f1da1139d0b6&quot;,&quot;GatewayToken&quot;:&quot;CEMNzRhpUWtqHyL&quot;,&quot;GatewayResponseCode&quot;:&quot;&quot;,&quot;GatewayResponseMessage&quot;:&quot;&quot;,&quot;GatewayStatus&quot;:&quot;&quot;,&quot;type&quot;:&quot;Card account&quot;,&quot;SubType&quot;:&quot;Visa&quot;,&quot;IsDebit&quot;:&quot;&quot;,&quot;HolderName&quot;:&quot;Jogn T Smith&quot;,&quot;Identifier&quot;:&quot;0321&quot;,&quot;ExpiryDate&quot;:&quot;2045-11-30&quot;,&quot;IssuedCountry&quot;:&quot;&quot;,&quot;AdditionalInfo&quot;:{}},&quot;Client&quot;:{&quot;ClientId&quot;:&quot;marchant-99944&quot;,&quot;AdditionalInfo&quot;:{}}}']" actualValue="#[payload]" doc:name="Check Response Payload" message="Response message is not valid as expected"/>
    </munit:test> 
    
    <munit:test name="InstrumentFlow-TestCase-9(FailureScenarioforGetProfile)" description="Get Profile API gives Error Response because of incorrect profile id">
        <munit:set payload="#['{&quot;Instrument&quot;:{&quot;InstrumentId&quot;:&quot;marchant-99944&quot;,&quot;type&quot;:&quot;Card account&quot;,&quot;SubType&quot;:&quot;Visa&quot;,&quot;GatewayNonce&quot;:&quot;&quot;,&quot;GatewayToken&quot;:&quot;CEMNzRhpUWtqHyL&quot;,&quot;LegalEntity&quot;:&quot;Axicorp Limited&quot;,&quot;Currency&quot;:&quot;GBP&quot;,&quot;HolderName&quot;:&quot;Walls T Smith&quot;,&quot;Identifier&quot;:&quot;0321&quot;,&quot;ExpiryDate&quot;:&quot;2029-11-30&quot;,&quot;TagName&quot;:&quot;MyHSBCCard&quot;,&quot;AdditionalInfo&quot;:{}},&quot;Client&quot;:{&quot;ClientId&quot;:&quot;marchant-99944&quot;,&quot;ProfileId&quot;:&quot;bbc6395c-1a68-483e-90ef-f1da1139d0b6&quot;,&quot;FirstName&quot;:&quot;Jolly&quot;,&quot;MiddleName&quot;:&quot;Walls&quot;,&quot;LastName&quot;:&quot;Smith&quot;,&quot;DOB&quot;:&quot;1980-11-11&quot;,&quot;Email&quot;:&quot;john.smith@test.com&quot;,&quot;Phone&quot;:&quot;123456789&quot;,&quot;Mobile&quot;:&quot;123456789&quot;,&quot;Address&quot;:&quot;115 Clock tower&quot;,&quot;City&quot;:&quot;Sydney&quot;,&quot;State&quot;:&quot;ON&quot;,&quot;PostCode&quot;:&quot;1234&quot;,&quot;CountryA2&quot;:&quot;AU&quot;,&quot;CountryA3&quot;:&quot;AUS&quot;,&quot;ClientIP&quot;:&quot;12.12.12.12&quot;,&quot;AdditionalInfo&quot;:{&quot;Locale&quot;:&quot;en_GB&quot;}},&quot;AdditionalInfo&quot;:{}}']" mimeType="application/json" doc:name="Set Request Payload"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Request Payload \n InstrumentId::'+payload.Instrument.InstrumentId + '\n Type:'+payload.Instrument.Type+'\n SubType:'+payload.Instrument.SubType+'\n GatewayNonce:'+payload.Instrument.GatewayNonce+'\n GatewayToken:'+payload.Instrument.GatewayToken+'\n LegalEntity:'+payload.Instrument.LegalEntity+'\n Currency:'+payload.Instrument.Currency+'\n HolderName:'+payload.Instrument.HolderName+'\n Identifier:'+payload.Instrument.Identifier+'\n ExpiryDate:'+payload.Instrument.ExpiryDate+'\n TagName:'+payload.Instrument.TagName+'\n AdditionalInfo:'+payload.Instrument.AdditionalInfo+'\n ClientId:'+payload.Client.ClientId+'\n ProfileId:'+payload.Client.ProfileId+'\n FirstName:'+payload.Client.FirstName+'\n MiddleName:'+payload.Client.MiddleName+'\n LastName:'+payload.Client.LastName+'\n DOB:'+payload.Client.DOB+'\n Email:'+payload.Client.Email+'\n Phone:'+payload.Client.Phone+'\n Mobile:'+payload.Client.Mobile+'\n Address:'+payload.Client.Address+'\n City:'+payload.Client.City+'\n State:'+payload.Client.State+'\n PostCode:'+payload.Client.PostCode+'\n CountryA2:'+payload.Client.CountryA2+'\n CountryA3:'+payload.Client.CountryA3+'\n ClientIP:'+payload.Client.ClientIP+'\n Locale:'+payload.AdditionalInfo.Locale+'\n AdditionalInfo:'+payload.AdditionalInfo+'\n']" level="INFO" category="MUnit Test || InstrumentFlow-TestCase-9(FailureScenarioforGetProfile)" doc:name="Request Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <flow-ref name="instrumentFlow" doc:name="Flow-ref to instrument Flow"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Response Payload \n InstrumentId : '+payload.Instrument.InstrumentId+'\n GatewayToken : '+payload.Instrument.GatewayToken+'\n ProfileId : '+payload.Instrument.ProfileId+' \n Gateway Response Message : '+payload.Instrument.GatewayResponseMessage+' \n Gateway Response Code : '+payload.Instrument.GatewayResponseCode+'\n type : '+payload.Instrument.type+'\n SubType : '+payload.Instrument.SubType+'\n IsDebit : '+payload.Instrument.IsDebit+'\n HolderName : '+payload.Instrument.HolderName+'\n Identifier : '+payload.Instrument.Identifier+'\n ExpiryDate : '+payload.Instrument.ExpiryDate+'\n IssuedCountry : '+payload.Instrument.IssuedCountry+'\n ClientId : '+payload.Client.ClientId+'\n']" level="INFO" category="MUnit Test || InstrumentFlow-TestCase-9(FailureScenarioforGetProfile)" doc:name="Response Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <munit:assert-on-equals message="Response message is not valid as expected" expectedValue="#['{&quot;Instrument&quot;:{&quot;InstrumentId&quot;:&quot;&quot;,&quot;ProfileId&quot;:&quot;&quot;,&quot;GatewayToken&quot;:&quot;&quot;,&quot;GatewayResponseCode&quot;:&quot;5269&quot;,&quot;GatewayResponseMessage&quot;:&quot;The ID(s) specified in the URL do not correspond to the values in the system.: bbc6395c-1a68-483e-90ef-f1da1139d0b6&quot;,&quot;GatewayStatus&quot;:&quot;FAILED&quot;,&quot;type&quot;:&quot;&quot;,&quot;SubType&quot;:&quot;&quot;,&quot;IsDebit&quot;:&quot;&quot;,&quot;HolderName&quot;:&quot;&quot;,&quot;Identifier&quot;:&quot;&quot;,&quot;ExpiryDate&quot;:&quot;&quot;,&quot;IssuedCountry&quot;:&quot;&quot;,&quot;AdditionalInfo&quot;:{&quot;AVS&quot;:&quot;&quot;,&quot;CVV&quot;:&quot;&quot;}},&quot;Client&quot;:{&quot;ClientId&quot;:&quot;marchant-99944&quot;,&quot;AdditionalInfo&quot;:{}}}']" actualValue="#[payload]" doc:name="Assert Error Response"/>
    </munit:test>
    <munit:test name="InstrumentFlow-TestCase-10(ScenarioforDiscardMessage)" description="Verifying Instrument- flow with test request for Discard Message.">
        <munit:set payload="#['{&quot;Instrument&quot;:{&quot;InstrumentId&quot;:&quot;marchant-222221&quot;,&quot;type&quot;:&quot;Card account&quot;,&quot;SubType&quot;:&quot;Visa&quot;,&quot;GatewayNonce&quot;:&quot;&quot;,&quot;GatewayToken&quot;:&quot;&quot;,&quot;LegalEntity&quot;:&quot;Axicorp Limited&quot;,&quot;Currency&quot;:&quot;GBP&quot;,&quot;HolderName&quot;:&quot;NJogn T Smith&quot;,&quot;Identifier&quot;:&quot;1234&quot;,&quot;ExpiryDate&quot;:&quot;2020-02-29&quot;,&quot;TagName&quot;:&quot;MyHSBCCard&quot;,&quot;AdditionalInfo&quot;:{}},&quot;Client&quot;:{&quot;ClientId&quot;:&quot;marchant-222221&quot;,&quot;ProfileId&quot;:&quot;&quot;,&quot;FirstName&quot;:&quot;John&quot;,&quot;MiddleName&quot;:&quot;&quot;,&quot;LastName&quot;:&quot;Smith&quot;,&quot;DOB&quot;:&quot;1980-01-01&quot;,&quot;Email&quot;:&quot;john.smith@test.com&quot;,&quot;Phone&quot;:&quot;123456789&quot;,&quot;Mobile&quot;:&quot;123456789&quot;,&quot;Address&quot;:&quot;1 Some St&quot;,&quot;City&quot;:&quot;Somewhere&quot;,&quot;State&quot;:&quot;ON&quot;,&quot;PostCode&quot;:&quot;1234&quot;,&quot;CountryA2&quot;:&quot;AU&quot;,&quot;CountryA3&quot;:&quot;AUS&quot;,&quot;ClientIP&quot;:&quot;12.12.12.12&quot;,&quot;AdditionalInfo&quot;:{&quot;Locale&quot;:&quot;en_GB&quot;}},&quot;AdditionalInfo&quot;:{}}']" mimeType="application/json" doc:name="Set Request Payload"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Request Payload \n GatewayNonce : '+payload.Instrument.GatewayNonce+'\n GatewayToken : '+payload.Instrument.GatewayToken+'\n LegalEntity : '+payload.Instrument.LegalEntity+'\n Currency : '+payload.Instrument.Currency+'\n ExpiryDate : '+payload.Instrument.ExpiryDate+'\n ProfileId : '+payload.Client.ProfileId+'\n ClientId : '+payload.Client.ClientId+'\n CountryA2 : '+payload.Client.CountryA2+'\n PostCode : '+payload.Client.PostCode+'\n FirstName : '+payload.Client.FirstName+'\n LastName : '+payload.Client.LastName+'\n Email : '+payload.Client.Email+'\n Address : '+payload.Client.Address+'\n Locale : '+payload.Client.AdditionalInfo.Locale+'\n']" level="INFO" category="MUnit Test || InstrumentFlow-TestCase-10(ScenarioforDiscardMessage)" doc:name="Request Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <flow-ref name="instrumentFlow" doc:name="Flow-ref to instrument Flow"/>
        <munit:assert-on-equals message="Response message is not valid as expected" expectedValue="#['{     &quot;Message&quot;: &quot;Bad request&quot; } ']" actualValue="#[payload]" doc:name="Assert Error Response"/>
    </munit:test>
    
    
    
</mule>
