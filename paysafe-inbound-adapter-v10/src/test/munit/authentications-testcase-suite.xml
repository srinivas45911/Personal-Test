<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
     <munit:config name="munit" mock-connectors="false" mock-inbounds="false" doc:name="MUnit configuration"/>
   <spring:beans>
        <spring:import resource="classpath:api.xml"/>
        <spring:import resource="classpath:clienttoken.xml"/>
        <spring:import resource="classpath:config.xml"/>
        <spring:import resource="classpath:deposits.xml"/>
        <spring:import resource="classpath:threedsecure.xml"/>
        <spring:import resource="classpath:instrument.xml"/>
        <spring:import resource="classpath:checkstatus.xml"/>
        <spring:import resource="classpath:error-handler.xml"/>
        <spring:import resource="classpath:withdrawals.xml"/>

    </spring:beans>
    <munit:test name="AuthenticationFlow-TestCase1(SuccessScenariofor3DSResult=Y)" description="Verifying  Authentication flow with test request for success scenario" >
        <mock:when messageProcessor=".*:.*" doc:name="Mock Authentications API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Authentications API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;cavv&quot;:&quot;MjAgY2hhcmFjdGVyIG1lc3NhZ2U=&quot;,&quot;eci&quot;:5,&quot;id&quot;:&quot;b1febeac-1aaf-4cbb-96d6-390b71394edf&quot;,&quot;links&quot;:[{&quot;href&quot;:&quot;https://test_axicorptest:B-qa2-0-5b04ad36-0-302c021410422bdf009a95b71e53339231e620da7f4827c40214206fe5b8582d46de1917bfc36fc4fd52ad83fee5@api.test.paysafe.com/threedsecure/v1/accounts/1001218660/authentications/b1febeac-1aaf-4cbb-96d6-390b71394edf&quot;,&quot;rel&quot;:&quot;self&quot;}],&quot;merchantRefNum&quot;:&quot;merchant ABC-445&quot;,&quot;signatureStatus&quot;:&quot;Y&quot;,&quot;status&quot;:&quot;COMPLETED&quot;,&quot;threeDResult&quot;:&quot;Y&quot;,&quot;txnTime&quot;:&quot;2018-06-01T14:00:33Z&quot;,&quot;xid&quot;:&quot;Y2Jnc3ZybXQwMSAgB4gOWwxVAAA=&quot;}']" mimeType="application/json"/>
        </mock:when>
        <set-payload value="#['{&quot;EnrollmentLookupId&quot;:&quot;d8968ae4-07b8-4725-89ba-557c5bf2f62c&quot;,&quot;ClientId&quot;:&quot;058698&quot;,&quot;MerchantReference&quot;:&quot;merchant ABC-445&quot;,&quot;Currency&quot;: &quot;GBP&quot;,&quot;LegalEntity&quot;:&quot;Axicorp Limited&quot;,&quot;CardToken&quot;:&quot;sfghddasgh&quot;,&quot;PayAuthResp&quot;:&quot;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&quot;,&quot;AdditionalInfo&quot;:{}}']" mimeType="application/json" doc:name="Set Request payload"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Request Payload \n MerchantReference : '+payload.MerchantReference+'\n PayAuthResp : '+payload.PayAuthResp+'\n EnrollmentLookupId : '+payload.EnrollmentLookupId+'\n CardToken : '+payload.CardToken+'\n ClientId : '+payload.ClientId+'\n']" level="INFO" category="MUnit Test || AuthenticationFlow-TestCase1(SuccessScenariofor3DSResult=Y)" doc:name="Request Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <flow-ref name="authenticationsFlow" doc:name="Flow-ref to authenticationsFlow"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Response Payload \n MerchantReference : '+payload.MerchantReference+'\n CAVV : '+payload.CAVV+'\n Status : '+payload.AdditionalInfo.Status+'\n SignatureStatus : '+payload.AdditionalInfo.SignatureStatus+'\n ECI : '+payload.ECI+'\n AuthenticationId : '+payload.AuthenticationId+'\n Result : '+payload.Result+' \n Gateway Response Message : '+payload.GatewayResponseMessage+' \n Gateway Response Code : '+payload.GatewayResponseCode+'\n']" level="INFO" category="MUnit Test || AuthenticationFlow-TestCase1(SuccessScenariofor3DSResult=Y)" doc:name="Response Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <munit:assert-on-equals expectedValue="#['{&quot;MerchantReference&quot;:&quot;merchant ABC-445&quot;,&quot;CAVV&quot;:&quot;MjAgY2hhcmFjdGVyIG1lc3NhZ2U=&quot;,&quot;AdditionalInfo&quot;:{&quot;Status&quot;:&quot;true&quot;,&quot;SignatureStatus&quot;:&quot;Y&quot;,&quot;XID&quot;:&quot;Y2Jnc3ZybXQwMSAgB4gOWwxVAAA=&quot;},&quot;GatewayResponseMessage&quot;:&quot;&quot;,&quot;ECI&quot;:5,&quot;GatewayResponseCode&quot;:&quot;&quot;,&quot;AuthenticationId&quot;:&quot;b1febeac-1aaf-4cbb-96d6-390b71394edf&quot;,&quot;Result&quot;:&quot;Y&quot;}']" actualValue="#[payload]" doc:name="Check Response Payload" message="Response message is not valid as expected"/>
    </munit:test>
    <munit:test name="AuthenticationFlow-TestCase2(SuccessScenariofor3DSResult=N)" description="Verifying Authentication flow with test request for success scenario" >
        <mock:when messageProcessor=".*:.*" doc:name="Mock Authentications API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Authentications API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;id&quot;:&quot;5b2d18ba-a542-4b22-bd30-6f3edf8ed522&quot;,&quot;links&quot;:[{&quot;href&quot;:&quot;https://test_axicorptest:B-qa2-0-5b04ad36-0-302c021410422bdf009a95b71e53339231e620da7f4827c40214206fe5b8582d46de1917bfc36fc4fd52ad83fee5@api.test.paysafe.com/threedsecure/v1/accounts/1001218660/authentications/5b2d18ba-a542-4b22-bd30-6f3edf8ed522&quot;,&quot;rel&quot;:&quot;self&quot;}],&quot;merchantRefNum&quot;:&quot;merchant ABC-446&quot;,&quot;signatureStatus&quot;:&quot;Y&quot;,&quot;status&quot;:&quot;COMPLETED&quot;,&quot;threeDResult&quot;:&quot;N&quot;,&quot;txnTime&quot;:&quot;2018-06-04T10:34:38Z&quot;,&quot;xid&quot;:&quot;Y2Jnc3ZybXQwMSAgB4gOWwxVAAA=&quot;}']"/>
        </mock:when>
        <set-payload value="#['{&quot;EnrollmentLookupId&quot;:&quot;d8968ae4-07b8-4725-89ba-557c5bf2f62c&quot;,&quot;ClientId&quot;:&quot;058698&quot;,&quot;MerchantReference&quot;:&quot;merchant ABC-446&quot;,&quot;Currency&quot;: &quot;GBP&quot;,&quot;LegalEntity&quot;:&quot;Axicorp Limited&quot;,&quot;CardToken&quot;:&quot;sfghddasgh&quot;,&quot;PayAuthResp&quot;:&quot;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&quot;,&quot;AdditionalInfo&quot;:{}}']" mimeType="application/json" doc:name="Set Request payload"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Request Payload \n MerchantReference : '+payload.MerchantReference+'\n PayAuthResp : '+payload.PayAuthResp+'\n EnrollmentLookupId : '+payload.EnrollmentLookupId+'\n CardToken : '+payload.CardToken+'\n ClientId : '+payload.ClientId+'\n']" level="INFO" category="MUnit Test || AuthenticationFlow-TestCase2(SuccessScenariofor3DSResult=N)" doc:name="Request Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <flow-ref name="authenticationsFlow" doc:name="Flow-ref to authenticationsFlow"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Response Payload \n MerchantReference : '+payload.MerchantReference+'\n CAVV : '+payload.CAVV+'\n Status : '+payload.AdditionalInfo.Status+'\n SignatureStatus : '+payload.AdditionalInfo.SignatureStatus+'\n ECI : '+payload.ECI+'\n AuthenticationId : '+payload.AuthenticationId+'\n Result : '+payload.Result+' \n Gateway Response Message : '+payload.GatewayResponseMessage+' \n Gateway Response Code : '+payload.GatewayResponseCode+'\n']" level="INFO" category="MUnit Test || AuthenticationFlow-TestCase2(SuccessScenariofor3DSResult=N)" doc:name="Response Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <munit:assert-on-equals message="Response message is not valid as expected" expectedValue="#['{&quot;MerchantReference&quot;:&quot;merchant ABC-446&quot;,&quot;CAVV&quot;:null,&quot;AdditionalInfo&quot;:{&quot;Status&quot;:&quot;true&quot;,&quot;SignatureStatus&quot;:&quot;Y&quot;,&quot;XID&quot;:&quot;Y2Jnc3ZybXQwMSAgB4gOWwxVAAA=&quot;},&quot;GatewayResponseMessage&quot;:&quot;&quot;,&quot;ECI&quot;:null,&quot;GatewayResponseCode&quot;:&quot;&quot;,&quot;AuthenticationId&quot;:&quot;5b2d18ba-a542-4b22-bd30-6f3edf8ed522&quot;,&quot;Result&quot;:&quot;N&quot;}']" actualValue="#[payload]" doc:name="Check Response Payload"/>
    </munit:test>
    <munit:test name="AuthenticationFlow-TestCase3(SuccessScenariofor3DSResult=U)" description="Verifying Authentication flow with test request for success scenario" >
        <mock:when messageProcessor=".*:.*" doc:name="Mock Authentications API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Authentications API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;id&quot;:&quot;2f0b05ac-5980-4f0b-8857-1ff388e25748&quot;,&quot;links&quot;:[{&quot;href&quot;:&quot;https://test_axicorptest:B-qa2-0-5b04ad36-0-302c021410422bdf009a95b71e53339231e620da7f4827c40214206fe5b8582d46de1917bfc36fc4fd52ad83fee5@api.test.paysafe.com/threedsecure/v1/accounts/1001218660/authentications/2f0b05ac-5980-4f0b-8857-1ff388e25748&quot;,&quot;rel&quot;:&quot;self&quot;}],&quot;merchantRefNum&quot;:&quot;merchant ABC-447&quot;,&quot;signatureStatus&quot;:&quot;Y&quot;,&quot;status&quot;:&quot;COMPLETED&quot;,&quot;threeDResult&quot;:&quot;U&quot;,&quot;txnTime&quot;:&quot;2018-06-04T11:08:57Z&quot;,&quot;xid&quot;:&quot;Y2Jnc3ZybXQwMSAgB4gOWwxVAAA=&quot;}']"/>
        </mock:when>
        <set-payload value="#['{&quot;EnrollmentLookupId&quot;:&quot;d8968ae4-07b8-4725-89ba-557c5bf2f62c&quot;,&quot;ClientId&quot;:&quot;058698&quot;,&quot;MerchantReference&quot;:&quot;merchant ABC-446&quot;,&quot;Currency&quot;: &quot;GBP&quot;,&quot;LegalEntity&quot;:&quot;Axicorp Limited&quot;,&quot;CardToken&quot;:&quot;sfghddasgh&quot;,&quot;PayAuthResp&quot;:&quot;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&quot;,&quot;AdditionalInfo&quot;:{}}']" mimeType="application/json" doc:name="Set Request payload"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Request Payload \n MerchantReference : '+payload.MerchantReference+'\n PayAuthResp : '+payload.PayAuthResp+'\n EnrollmentLookupId : '+payload.EnrollmentLookupId+'\n CardToken : '+payload.CardToken+'\n ClientId : '+payload.ClientId+'\n']" level="INFO" category="MUnit Test || AuthenticationFlow-TestCase3(SuccessScenariofor3DSResult=U)" doc:name="Request Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <flow-ref name="authenticationsFlow" doc:name="Flow-ref to authenticationsFlow"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Response Payload \n MerchantReference : '+payload.MerchantReference+'\n CAVV : '+payload.CAVV+'\n Status : '+payload.AdditionalInfo.Status+'\n SignatureStatus : '+payload.AdditionalInfo.SignatureStatus+'\n ECI : '+payload.ECI+'\n AuthenticationId : '+payload.AuthenticationId+'\n Result : '+payload.Result+' \n Gateway Response Message : '+payload.GatewayResponseMessage+' \n Gateway Response Code : '+payload.GatewayResponseCode+'\n']" level="INFO" category="MUnit Test || AuthenticationFlow-TestCase3(SuccessScenariofor3DSResult=U)" doc:name="Response Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <munit:assert-on-equals message="Response message is not valid as expected" expectedValue="#['{&quot;MerchantReference&quot;:&quot;merchant ABC-447&quot;,&quot;CAVV&quot;:null,&quot;AdditionalInfo&quot;:{&quot;Status&quot;:&quot;true&quot;,&quot;SignatureStatus&quot;:&quot;Y&quot;,&quot;XID&quot;:&quot;Y2Jnc3ZybXQwMSAgB4gOWwxVAAA=&quot;},&quot;GatewayResponseMessage&quot;:&quot;&quot;,&quot;ECI&quot;:null,&quot;GatewayResponseCode&quot;:&quot;&quot;,&quot;AuthenticationId&quot;:&quot;2f0b05ac-5980-4f0b-8857-1ff388e25748&quot;,&quot;Result&quot;:&quot;U&quot;}']" actualValue="#[payload]" doc:name="Check Response Payload"/>
    </munit:test>
    <munit:test name="AuthenticationFlow-TestCase4(SuccessScenariofor3DSResult=A)" description="Verifying Authentication flow with test request for success scenario" >
        <mock:when messageProcessor=".*:.*" doc:name="Mock Authentications API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Authentications API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;cavv&quot;:&quot;MjAgY2hhcmFjdGVyIG1lc3NhZ2U=&quot;,&quot;eci&quot;:6,&quot;id&quot;:&quot;2485be36-bf5d-4d59-804f-c12e606c5305&quot;,&quot;links&quot;:[{&quot;href&quot;:&quot;https://test_axicorptest:B-qa2-0-5b04ad36-0-302c021410422bdf009a95b71e53339231e620da7f4827c40214206fe5b8582d46de1917bfc36fc4fd52ad83fee5@api.test.paysafe.com/threedsecure/v1/accounts/1001218660/authentications/2485be36-bf5d-4d59-804f-c12e606c5305&quot;,&quot;rel&quot;:&quot;self&quot;}],&quot;merchantRefNum&quot;:&quot;merchant ABC-445&quot;,&quot;signatureStatus&quot;:&quot;Y&quot;,&quot;status&quot;:&quot;COMPLETED&quot;,&quot;threeDResult&quot;:&quot;A&quot;,&quot;txnTime&quot;:&quot;2018-06-05T08:53:49Z&quot;,&quot;xid&quot;:&quot;Y2Jnc3ZybXQwMSAgB4gOWwxVAAA=&quot;}']"/>
        </mock:when>
        <set-payload value="#['{&quot;EnrollmentLookupId&quot;:&quot;d8968ae4-07b8-4725-89ba-557c5bf2f62c&quot;,&quot;ClientId&quot;:&quot;058698&quot;,&quot;MerchantReference&quot;:&quot;merchant ABC-445&quot;,&quot;Currency&quot;: &quot;GBP&quot;,&quot;LegalEntity&quot;:&quot;Axicorp Limited&quot;,&quot;CardToken&quot;:&quot;sfghddasgh&quot;,&quot;PayAuthResp&quot;:&quot;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&quot;,&quot;AdditionalInfo&quot;:{}}']" mimeType="application/json" doc:name="Set Request payload"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Request Payload \n MerchantReference : '+payload.MerchantReference+'\n PayAuthResp : '+payload.PayAuthResp+'\n EnrollmentLookupId : '+payload.EnrollmentLookupId+'\n CardToken : '+payload.CardToken+'\n ClientId : '+payload.ClientId+'\n']" level="INFO" category="MUnit Test || AuthenticationFlow-TestCase4(SuccessScenariofor3DSResult=A)" doc:name="Request Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <flow-ref name="authenticationsFlow" doc:name="Flow-ref to authenticationsFlow"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Response Payload \n MerchantReference : '+payload.MerchantReference+'\n CAVV : '+payload.CAVV+'\n Status : '+payload.AdditionalInfo.Status+'\n SignatureStatus : '+payload.AdditionalInfo.SignatureStatus+'\n ECI : '+payload.ECI+'\n AuthenticationId : '+payload.AuthenticationId+'\n Result : '+payload.Result+' \n Gateway Response Message : '+payload.GatewayResponseMessage+' \n Gateway Response Code : '+payload.GatewayResponseCode+'\n']" level="INFO" category="MUnit Test || AuthenticationFlow-TestCase4(SuccessScenariofor3DSResult=A)" doc:name="Response Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <munit:assert-on-equals message="Response message is not valid as expected" expectedValue="#['{&quot;MerchantReference&quot;:&quot;merchant ABC-445&quot;,&quot;CAVV&quot;:&quot;MjAgY2hhcmFjdGVyIG1lc3NhZ2U=&quot;,&quot;AdditionalInfo&quot;:{&quot;Status&quot;:&quot;true&quot;,&quot;SignatureStatus&quot;:&quot;Y&quot;,&quot;XID&quot;:&quot;Y2Jnc3ZybXQwMSAgB4gOWwxVAAA=&quot;},&quot;GatewayResponseMessage&quot;:&quot;&quot;,&quot;ECI&quot;:6,&quot;GatewayResponseCode&quot;:&quot;&quot;,&quot;AuthenticationId&quot;:&quot;2485be36-bf5d-4d59-804f-c12e606c5305&quot;,&quot;Result&quot;:&quot;A&quot;}']" actualValue="#[payload]" doc:name="Check Response Payload"/>
    </munit:test>
    <munit:test name="AuthenticationFlow-TestCase5(SuccessScenariofor3DSResult=E)" description="Verifying Authentication flow with test request for success scenario" >
        <mock:when messageProcessor=".*:.*" doc:name="Mock Authentications API">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Authentications API']"/>
            </mock:with-attributes>
            <mock:then-return payload="#['{&quot;id&quot;:&quot;49e0d2f9-d2cf-4bc1-8476-835a02bacbf3&quot;,&quot;links&quot;:[{&quot;href&quot;:&quot;https://test_axicorptest:B-qa2-0-5b04ad36-0-302c021410422bdf009a95b71e53339231e620da7f4827c40214206fe5b8582d46de1917bfc36fc4fd52ad83fee5@api.test.paysafe.com/threedsecure/v1/accounts/1001218660/authentications/49e0d2f9-d2cf-4bc1-8476-835a02bacbf3&quot;,&quot;rel&quot;:&quot;self&quot;}],&quot;merchantRefNum&quot;:&quot;merchant ABC-445&quot;,&quot;signatureStatus&quot;:&quot;Y&quot;,&quot;status&quot;:&quot;COMPLETED&quot;,&quot;threeDResult&quot;:&quot;E&quot;,&quot;txnTime&quot;:&quot;2018-06-05T11:31:20Z&quot;,&quot;xid&quot;:&quot;Y2Jnc3ZybXQwMSAgB4gOWwxVAAA=&quot;}']" mimeType="application/json"/>
        </mock:when>
        <set-payload value="#['{&quot;EnrollmentLookupId&quot;:&quot;d8968ae4-07b8-4725-89ba-557c5bf2f62c&quot;,&quot;ClientId&quot;:&quot;058698&quot;,&quot;MerchantReference&quot;:&quot;merchant ABC-445&quot;,&quot;Currency&quot;: &quot;GBP&quot;,&quot;LegalEntity&quot;:&quot;Axicorp Limited&quot;,&quot;CardToken&quot;:&quot;sfghddasgh&quot;,&quot;PayAuthResp&quot;:&quot;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&quot;,&quot;AdditionalInfo&quot;:{}}']" mimeType="application/json" doc:name="Set Request payload"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Request Payload \n MerchantReference : '+payload.MerchantReference+'\n PayAuthResp : '+payload.PayAuthResp+'\n EnrollmentLookupId : '+payload.EnrollmentLookupId+'\n CardToken : '+payload.CardToken+'\n ClientId : '+payload.ClientId+'\n']" level="INFO" category="MUnit Test || AuthenticationFlow-TestCase5(SuccessScenariofor3DSResult=E)" doc:name="Request Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <flow-ref name="authenticationsFlow" doc:name="Flow-ref to authenticationsFlow"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Response Payload \n MerchantReference : '+payload.MerchantReference+'\n CAVV : '+payload.CAVV+'\n Status : '+payload.AdditionalInfo.Status+'\n SignatureStatus : '+payload.AdditionalInfo.SignatureStatus+'\n ECI : '+payload.ECI+'\n AuthenticationId : '+payload.AuthenticationId+'\n Result : '+payload.Result+' \n Gateway Response Message : '+payload.GatewayResponseMessage+' \n Gateway Response Code : '+payload.GatewayResponseCode+'\n']" level="INFO" category="MUnit Test || AuthenticationFlow-TestCase5(SuccessScenariofor3DSResult=E)" doc:name="Response Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <munit:assert-on-equals expectedValue="#['{&quot;MerchantReference&quot;:&quot;merchant ABC-445&quot;,&quot;CAVV&quot;:null,&quot;AdditionalInfo&quot;:{&quot;Status&quot;:&quot;true&quot;,&quot;SignatureStatus&quot;:&quot;Y&quot;,&quot;XID&quot;:&quot;Y2Jnc3ZybXQwMSAgB4gOWwxVAAA=&quot;},&quot;GatewayResponseMessage&quot;:&quot;&quot;,&quot;ECI&quot;:null,&quot;GatewayResponseCode&quot;:&quot;&quot;,&quot;AuthenticationId&quot;:&quot;49e0d2f9-d2cf-4bc1-8476-835a02bacbf3&quot;,&quot;Result&quot;:&quot;E&quot;}']" actualValue="#[payload]" doc:name="Check Response Payload" message="Response message is not valid as expected"/>
    </munit:test>
    
    <munit:test name="AuthenticationFlow-TestCase6(FailureScenarioForEnrollmentLookupId)" description="MUnit Test">
        <set-payload value="#['{&quot;EnrollmentLookupId&quot;:&quot;968ae4-07b8-4725-89ba-557c5bf2f62c&quot;,&quot;ClientId&quot;:&quot;058698&quot;,&quot;MerchantReference&quot;:&quot;merchant ABC-445&quot;,&quot;Currency&quot;: &quot;GBP&quot;,&quot;LegalEntity&quot;:&quot;Axicorp Limited&quot;,&quot;CardToken&quot;:&quot;sfghddasgh&quot;,&quot;PayAuthResp&quot;:&quot;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&quot;,&quot;AdditionalInfo&quot;:{}}']" mimeType="application/json" doc:name="Set Request payload"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Request Payload \n MerchantReference : '+payload.MerchantReference+'\n PayAuthResp : '+payload.PayAuthResp+'\n EnrollmentLookupId : '+payload.EnrollmentLookupId+'\n CardToken : '+payload.CardToken+'\n ClientId : '+payload.ClientId+'\n']" level="INFO" category="MUnit Test || AuthenticationFlow-TestCase6(FailureScenarioForEnrollmentLookupId)" doc:name="Request Payload"/>
        <flow-ref name="authenticationsFlow" doc:name="Flow-ref to authenticationsFlow"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <logger message="#['Response Payload \n MerchantReference : '+payload.MerchantReference+'\n CAVV : '+payload.CAVV+'\n Status : '+payload.AdditionalInfo.Status+'\n SignatureStatus : '+payload.AdditionalInfo.SignatureStatus+'\n ECI : '+payload.ECI+'\n AuthenticationId : '+payload.AuthenticationId+'\n Result : '+payload.Result+' \n Gateway Response Message : '+payload.GatewayResponseMessage+' \n Gateway Response Code : '+payload.GatewayResponseCode+'\n']" level="INFO" category="MUnit Test || AuthenticationFlow-TestCase6(FailureScenarioForEnrollmentLookupId)" doc:name="Response Payload"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <munit:assert-on-equals message="Response message is not valid as expected" expectedValue="#['{&quot;MerchantReference&quot;:&quot;merchant ABC-445&quot;,&quot;CAVV&quot;:&quot;&quot;,&quot;AdditionalInfo&quot;:{&quot;Status&quot;:&quot;&quot;,&quot;SignatureStatus&quot;:&quot;&quot;,&quot;XID&quot;:&quot;&quot;},&quot;GatewayResponseMessage&quot;:&quot;No PAReq found for e_uuid 968ae4-07b8-4725-89ba-557c5bf2f62c&quot;,&quot;ECI&quot;:&quot;&quot;,&quot;GatewayResponseCode&quot;:&quot;5269&quot;,&quot;AuthenticationId&quot;:&quot;&quot;,&quot;Result&quot;:&quot;&quot;}']" actualValue="#[payload]" doc:name="Check Response Payload"/>
    </munit:test>
    
    
    
</mule>
